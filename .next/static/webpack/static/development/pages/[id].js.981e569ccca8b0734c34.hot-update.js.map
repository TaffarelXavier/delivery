{"version":3,"file":"static/webpack/static\\development\\pages\\[id].js.981e569ccca8b0734c34.hot-update.js","sources":["webpack:///./components/Produtos/index.js"],"sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineRoundedIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\r\n//values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    border: \"0px solid #ccc\",\r\n    marginBottom: 4,\r\n    boxShadow: theme.shadows[3],\r\n    backgroundColor: \"rgba(245,245,245,0.8)\"\r\n  },\r\n  imageBox: {\r\n    width: \"100%\",\r\n    height: 140,\r\n    flex: 1,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      border: \"0px solid green\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      border: \"0px solid red\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      border: \"0px solid lime\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      border: \"0px solid gold\"\r\n    }\r\n  },\r\n  bigAvatar: {\r\n    height: 100,\r\n    borderRadius: 5,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      border: \"1px solid green\",\r\n      margin: 0,\r\n      width: 80\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: 10,\r\n      width: 100\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: 10,\r\n      width: 100\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      margin: 10,\r\n      width: 100\r\n    }\r\n  },\r\n  quantidade: {\r\n    textAlign: \"center\",\r\n    width: 30,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    display: \"inline\",\r\n    border: \"0\",\r\n    borderBottom: \"1px solid #ccc\"\r\n  },\r\n  cardAvatar: {\r\n    border: \"1px solid red\"\r\n  },\r\n  cardContent: {\r\n    border: \"1px solid lime\"\r\n  },\r\n  cardActions: {\r\n    border: \"1px solid blue\"\r\n  },\r\n  valorUnitario: {\r\n    border: \"0px solid red\",\r\n    color: \"rgb(244,67,54)\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      fontWeight: \"bold\"\r\n    }\r\n  },\r\n  subtotal: {\r\n    border: \"0px solid red\",\r\n    paddingRight: 12,\r\n    fontSize: \"12px\"\r\n  },\r\n  mdlCard: {\r\n    flexDirection: \"column\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    overflow: \"hidden\",\r\n    zIndex: 1,\r\n    position: \"relative\",\r\n    background: \"#fff\",\r\n    borderRadius: \"2px\",\r\n    boxSizing: \"border-box\",\r\n    border: \"0px solid red\"\r\n  },\r\n  cardItemMenu: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"96%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"96%\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"96%\",\r\n    },\r\n    margin: \"10px auto\",\r\n    minHeight: \"10px\",\r\n    border: \"0px solid red\"\r\n  },\r\n  info_item: {\r\n    float: 'none',\r\n  },\r\n  nomeItemMenu: {\r\n    fontFamily: \"Lato\",\r\n    color: \"#444\",\r\n    fontSize: \"18px\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    marginTop: \"0px\",\r\n    verticalAlign: \"baseline\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    lineHeight:\"35px\"\r\n  },\r\n  descItemMenu: {\r\n    fontFamily: \"Lato\",\r\n    color: \"#444\",\r\n    fontSize: \"12px\",\r\n    margin: 0,\r\n    padding: 0,\r\n    marginTop: \"0px\",\r\n    verticalAlign: \"baseline\",\r\n    lineHeight: \"14px\",\r\n    textTransform: \"capitalize\"\r\n  },\r\n  img_prod: {\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    float: \"left\",\r\n    margin: \"10px\",\r\n    borderRadius: \"5px\",\r\n    maxWidth: \"100%\"\r\n  },\r\n  mdlCard__actions: {\r\n    fontSize: \"12px\",\r\n    lineHeight: \"normal\",\r\n    width: \"100%\",\r\n    backgroundColor: \"transparent\",\r\n    padding: \"8px\",\r\n    boxSizing: \"border-box\",\r\n    borderTop: \"1px solid rgba(0,0,0,.1)\"\r\n  },\r\n  myButton: {\r\n    color: \"rgb(244,67,54)\",\r\n    border: \"none\",\r\n    borderRadius: \"2px\",\r\n    display: \"block\",\r\n    width: 40,\r\n    minWidth: \"30px\"\r\n  }\r\n}));\r\n\r\n/**\r\n * Component: Produtos\r\n */\r\nexport default function Produtos(props) {\r\n  const classes = useStyles();\r\n  const [quantidade, setQuantidade] = useState(0);\r\n  const [valorTotal, setValorTotal] = useState(0);\r\n  const [observacao, setObservacao] = useState(\"\");\r\n\r\n  function addProduct() {\r\n    let products = [];\r\n\r\n    if (localStorage.getItem(\"products\")) {\r\n      products = JSON.parse(localStorage.getItem(\"products\"));\r\n    }\r\n\r\n    //Desestruturação Javascript\r\n    const { id, nome, imagem, precoUnitario, descricao } = props;\r\n\r\n    //Pega o index\r\n    let objIndex = products.findIndex(pedido => pedido.productId === id);\r\n\r\n    //Caso não exista\r\n    if (objIndex === -1) {\r\n      products.push({\r\n        productId: id,\r\n        nome: nome,\r\n        imagem: imagem,\r\n        quantidade: quantidade + 1,\r\n        observacao: observacao,\r\n        preco: precoUnitario,\r\n        descricao: descricao\r\n      });\r\n\r\n      localStorage.setItem(\"products\", JSON.stringify(products));\r\n    } else {\r\n      products[objIndex].productId = id;\r\n      products[objIndex].quantidade = quantidade + 1;\r\n      products[objIndex].observacao = observacao;\r\n      products[objIndex].nome = nome;\r\n      products[objIndex].imagem = imagem;\r\n      products[objIndex].preco = precoUnitario;\r\n      products[objIndex].descricao = descricao;\r\n      localStorage.setItem(\"products\", JSON.stringify(products));\r\n    }\r\n  }\r\n\r\n  function add() {\r\n    let quant = parseInt(quantidade) + 1;\r\n    setQuantidade(quant);\r\n    addProduct();\r\n    setValorTotal((props.precoUnitario * quant).toFixed(2));\r\n  }\r\n\r\n  function subtract() {\r\n    let quant = parseInt(quantidade) - 1;\r\n    setQuantidade(quant);\r\n    addProduct();\r\n    setValorTotal(props.precoUnitario * quant);\r\n  }\r\n\r\n  function onChangeQuantidade(ev) {\r\n    let quant = parseInt(ev.target.value);\r\n    setQuantidade(quant);\r\n    addProduct();\r\n    setValorTotal((props.precoUnitario * parseInt(quant)).toFixed(2));\r\n  }\r\n\r\n  function alterarTextoTextArea(ev) {\r\n    setObservacao(ev.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (quantidade <= 0 || isNaN(parseInt(quantidade))) {\r\n      setValorTotal(0);\r\n      setQuantidade(0);\r\n    }\r\n    props.callbackParent(JSON.parse(localStorage.getItem(\"products\")).length);\r\n  },[quantidade]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.cardItemMenu}\r\n      id={props.id}\r\n      title={\"Clique para entrar em \" + props.nome}\r\n      >\r\n        <div className={classes.mdlCard}>\r\n          <div className={classes.info_item}>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              src={props.imagem}\r\n              className={classes.img_prod}\r\n            />\r\n            <p className={classes.nomeItemMenu}>{props.nome}</p>\r\n            <p className={classes.descItemMenu}>\r\n              {props.descricao.length == 0 ? (\r\n                <>\r\n                  {props.nome}\r\n                </>\r\n              ) : (\r\n                <>{props.descricao}</>\r\n              )}\r\n            </p>\r\n          </div>\r\n          <Grid container className={classes.mdlCard__actions}>\r\n            <Grid item xs=\"7\">\r\n              <Button className={classes.valorUnitario}>\r\n                <b>\r\n                  R${\" \"}\r\n                  {props.precoUnitario != undefined\r\n                    ? props.precoUnitario.toFixed(2)\r\n                    : null}\r\n                </b>\r\n              </Button>{quantidade > 0 && <>Subtotal: R$ {valorTotal}</>}\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"center\"\r\n              xs=\"5\"\r\n            >\r\n              <Button \r\n              onClick={subtract}\r\n              disabled={quantidade < 1}\r\n              className={classes.myButton}>\r\n                <RemoveCircleOutlineRoundedIcon />\r\n              </Button>\r\n              <input\r\n                type=\"number\"\r\n                onChange={ev => onChangeQuantidade(ev)}\r\n                value={quantidade}\r\n                className={classes.quantidade}\r\n              />\r\n              <Button className={classes.myButton} onClick={add}>\r\n                <AddCircleOutlineIcon />\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n/*<Grid container wrap=\"nowrap\">\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"my-input\">Observação:</InputLabel>\r\n            <Input\r\n              onChange={ev => {\r\n                alterarTextoTextArea(ev);\r\n              }}\r\n              value={observacao}\r\n            />\r\n          </FormControl>\r\n        </Grid>*/\r\n{/*\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"row\"\r\n      alignItems=\"stretch\"\r\n      alignContent=\"flex-start\"\r\n      xs={12}\r\n      sm={12}\r\n      md={12}\r\n      lg={12}\r\n      className={classes.root}\r\n      id={props.id}\r\n      title={\"Clique para entrar em \" + props.nome}\r\n    >\r\n      <Grid xs={3} sm={3} md={3} lg={2} item>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.imageBox}\r\n        >\r\n          <Avatar\r\n            alt=\"Remy Sharp\"\r\n            src={props.imagem}\r\n            className={classes.bigAvatar}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid xs={5} sm={5} md={6} lg={7} item className={classes.cardContent}>\r\n        <Grid item>\r\n          <Typography>\r\n            <b>{props.nome}</b>\r\n          </Typography>\r\n          <sub>\r\n            <strong>{props.medida}</strong>\r\n          </sub>\r\n          <Typography>{props.descricao}</Typography>\r\n        </Grid>\r\n        {observacao.length === 0 && (\r\n          <>\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </>\r\n        )}\r\n        \r\n      </Grid>\r\n      <Grid\r\n        xs={4}\r\n        sm={4}\r\n        md={3}\r\n        lg={3}\r\n        item\r\n        container\r\n        alignItems=\"baseline\"\r\n        justify=\"flex-end\"\r\n        className={classes.cardActions}\r\n      >\r\n        <Grid item>\r\n          <Typography className={classes.valorUnitario}>\r\n            <b>\r\n              Preço: R${\" \"}\r\n              {props.precoUnitario != undefined\r\n                ? props.precoUnitario.toFixed(2)\r\n                : null}\r\n            </b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={subtract}\r\n            disabled={quantidade < 1}\r\n            color=\"primary\"\r\n            aria-label=\"add to shopping cart\"\r\n          >\r\n            <RemoveShoppingCartIcon />\r\n          </IconButton>\r\n          <input\r\n            type=\"number\"\r\n            onChange={ev => onChangeQuantidade(ev)}\r\n            value={quantidade}\r\n            className={classes.quantidade}\r\n          />\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"add to shopping cart\"\r\n            onClick={add}\r\n          >\r\n            <AddShoppingCartIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <br />\r\n        <Grid item>\r\n          <br />\r\n         \r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n     */         \r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnJA;AAAA;AA6JA;;;;AAGA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;;;;;;;;;;;;AAWA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;;;;A","sourceRoot":""}