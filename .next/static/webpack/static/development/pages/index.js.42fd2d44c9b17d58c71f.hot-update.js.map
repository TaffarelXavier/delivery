{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.42fd2d44c9b17d58c71f.hot-update.js","sources":["webpack:///./components/Carrinho.js"],"sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport LocalStorageHandler from \"./LocalStorageHandler\";\r\nimport LazyLoad from \"./LazyLoad\";\r\nimport Loadable from \"react-loadable\";\r\n\r\nconst DialogFormConfirm = Loadable({\r\n  loader: () => import(\"./DialogFormConfirm\"),\r\n  loading() {\r\n    return <LazyLoad height=\"30px\" margintop=\"5px\" />;\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    margin: \"auto\",\r\n    maxWidth: 500,\r\n    minWidth: 500\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: \"110.129px\"\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  Div: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"200px\",\r\n    margin: \"0px\",\r\n    border: \"1px outset pink\"\r\n  }\r\n}));\r\n\r\nconst Carrinho = props => {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData(JSON.parse(localStorage.getItem(\"products\")));\r\n  });\r\n\r\n  const remover = id => {\r\n    LocalStorageHandler.removeByIdInArray(id, \"products\");\r\n    setData(JSON.parse(localStorage.getItem(\"products\")));\r\n  };\r\n\r\n  let valorTotal = 0;\r\n\r\n  let conteudo = null;\r\n\r\n  if (data !== null) {\r\n\r\n    if (data.length > 0) {\r\n\r\n      conteudo = data.map((produto, _k) => {\r\n\r\n        let quant = produto.quantidade;\r\n\r\n        let valTotal = produto.preco * quant;\r\n\r\n        valorTotal += valTotal;\r\n\r\n        return (\r\n          <React.Fragment key={_k}>\r\n            <Paper className={classes.paper}>\r\n              <Grid container spacing={1}>\r\n                <Grid item>\r\n                  <ButtonBase className={classes.image}>\r\n                    <img\r\n                      className={classes.img}\r\n                      alt=\"complex\"\r\n                      src={produto.imagem}\r\n                    />\r\n                  </ButtonBase>\r\n                </Grid>\r\n                <Grid item xs={12} sm container>\r\n                  <Grid item xs container direction=\"column\" spacing={1}>\r\n                    <Grid item xs>\r\n                      <Typography gutterBottom variant=\"subtitle1\">\r\n                        <b>{produto.nome}</b>\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" gutterBottom>\r\n                        {/*Descrição aqui*/}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <Typography\r\n                        onClick={ev => remover(produto.productId)}\r\n                        size=\"small\"\r\n                        variant=\"body2\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        color=\"primary\"\r\n                        title=\"Clique para remover este item do carrinho\"\r\n                      >\r\n                        Remover\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\">\r\n                      <b>Quant: {quant}</b>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\">\r\n                      <b>R$ {produto.preco.toFixed(2)}</b>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" title=\"Valor Total\">\r\n                      <b>V.T.: R$ {valTotal.toFixed(2)}</b>\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <hr style={{ border: 0, borderTop: \"1px solid #ddd\" }} />\r\n          </React.Fragment>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            <b>MEU CARRINHO</b>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {conteudo}\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                <p>\r\n                  <b>VALOR TOTAL: R$ {valorTotal.toFixed(2)}</b>\r\n                </p>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              align=\"\"\r\n              size=\"large\"\r\n              onClick={ev => setOpenDialog(true)}\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              <b>FAZER PEDIDO</b>\r\n            </Button>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DialogFormConfirm\r\n        open={openDialog}\r\n        onClose={() => {\r\n          setOpenDialog(false);\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Carrinho;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAOA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AA1BA;AAAA;AACA;AAkCA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}