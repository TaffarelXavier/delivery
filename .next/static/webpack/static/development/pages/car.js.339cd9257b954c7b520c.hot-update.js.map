{"version":3,"file":"static/webpack/static\\development\\pages\\car.js.339cd9257b954c7b520c.hot-update.js","sources":["webpack:///./pages/car.js"],"sourcesContent":["import React from \"react\";\r\nimport ListaProdutos from \"../db/produtos.json\";\r\nconsole.clear();\r\n\r\n/* Product */\r\nclass Product extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quantidade: 0,\r\n      valorTotal: 0,\r\n      descricao: \"\",\r\n      observacao: \"\"\r\n    };\r\n    this.add = this.add.bind(this);\r\n    this.subtract = this.subtract.bind(this);\r\n  }\r\n\r\n  removeProduct(id) {\r\n    let storageProducts = JSON.parse(localStorage.getItem(\"products\"));\r\n    let products = storageProducts.filter(product => product.id !== id);\r\n    localStorage.setItem(\"products\", JSON.stringify(products));\r\n  }\r\n\r\n  addProduct() {\r\n    let products = [];\r\n\r\n    if (localStorage.getItem(\"products\")) {\r\n      products = JSON.parse(localStorage.getItem(\"products\"));\r\n    }\r\n\r\n    //Desestruturação Javascript\r\n    const { id } = this.props;\r\n\r\n    const { quantidade, observacao } = this.state;\r\n\r\n    //Pega o index\r\n    let objIndex = products.findIndex(pedido => pedido.productId === id);\r\n\r\n    //Caso não exista\r\n    if (objIndex === -1) {\r\n      products.push({\r\n        productId: id,\r\n        quantidade: quantidade + 1,\r\n        observacao: observacao\r\n      });\r\n\r\n      localStorage.setItem(\"products\", JSON.stringify(products));\r\n    } else {\r\n      products[objIndex].productId = id;\r\n      products[objIndex].quantidade = quantidade + 1;\r\n      products[objIndex].observacao = observacao;\r\n\r\n      localStorage.setItem(\"products\", JSON.stringify(products));\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.setState({\r\n      quantidade: parseInt(this.state.quantidade) + 1\r\n    });\r\n\r\n    this.props.handleTotal(this.props.precoUnitario);\r\n\r\n    this.setState((state, props) => {\r\n      this.addProduct();\r\n      return {\r\n        valorTotal: this.props.precoUnitario * parseInt(state.quantidade)\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeQuantidade(ev) {\r\n    this.setState({\r\n      quantidade: ev.target.value\r\n    });\r\n\r\n    this.props.handleTotal(this.props.precoUnitario);\r\n\r\n    this.setState((state, props) => {\r\n      this.addProduct();\r\n      return {\r\n        valorTotal: this.props.precoUnitario * parseInt(state.quantidade)\r\n      };\r\n    });\r\n  }\r\n\r\n  subtract() {\r\n    this.setState({\r\n      quantidade: this.state.quantidade - 1\r\n    });\r\n    this.props.handleTotal(-this.props.precoUnitario);\r\n    this.setState((state, props) => ({\r\n      valorTotal: this.props.precoUnitario * parseInt(state.quantidade)\r\n    }));\r\n  }\r\n\r\n  alterarTextoTextArea(ev) {\r\n    this.setState({\r\n      observacao: ev.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" id={this.props.id}>\r\n        <div\r\n          className=\"row\"\r\n          style={{\r\n            background: \"white\",\r\n            boxShadow:\r\n              \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12) !important\",\r\n            borderRadius: 3,\r\n            padding: 20\r\n          }}\r\n        >\r\n          <div className=\"col-sm-2\">\r\n            <figure className=\"figure\">\r\n              <img\r\n                src={this.props.imagem}\r\n                className=\"figure-img img-fluid rounded\"\r\n                alt={this.props.imagem}\r\n              />\r\n              {/* <figcaption className=\"figure-caption\">\r\n                A caption for the above image.\r\n              </figcaption> */}\r\n            </figure>\r\n            {/* <div className=\"media\">\r\n              <img\r\n                src={this.props.imagem}\r\n                className=\"img-thumbnail\"\r\n                alt={this.props.imagem}\r\n              />\r\n            </div> */}\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            <div className=\"row\" style={{ marginBottom: 0 }}>\r\n              <div className=\"col-sm-12\">\r\n                <h2>\r\n                  <b>{this.props.nome.toUpperCase()}</b>\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ marginBottom: 20 }}>\r\n              <div className=\"col-sm-12\">{this.props.descricao}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  style={{ border: 0, borderBottom: \"1px solid #ccc\" }}\r\n                  placeholder=\"Observação\"\r\n                  onChange={ev => {\r\n                    this.alterarTextoTextArea(ev);\r\n                  }}\r\n                  value={this.state.observacao}\r\n                >\r\n                  {this.state.observacao}\r\n                </textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-sm-2 text-right\"\r\n            style={{ border: \"0px solid red\" }}\r\n          >\r\n            <h2>\r\n              <b>R$ {this.props.precoUnitario.toFixed(2)}</b>\r\n            </h2>\r\n            <h2>\r\n              <b>R$ {this.state.valorTotal.toFixed(2)}</b>\r\n            </h2>\r\n            QUANT: {this.state.quantidade}\r\n            <br />\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <button\r\n                className=\"btn btn-info btn-lg\"\r\n                onClick={this.subtract}\r\n                disabled={this.state.quantidade < 1}\r\n              >\r\n                -1\r\n              </button>\r\n              <input type=\"number\" onChange={(ev)=>this.onChangeQuantidade(ev)} value={this.state.quantidade} style={{width:40}} />\r\n              <button className=\"btn btn-info btn-lg\" onClick={this.add}>\r\n                +1\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* TotalComponent */\r\nconst TotalComponent = props => {\r\n  let total = props.total.toFixed(2);\r\n\r\n  const confirmarPedido = () => {\r\n    let pedidoId = 2;\r\n\r\n    let storageProducts = JSON.parse(localStorage.getItem(\"products\"));\r\n\r\n    let objIndex = storageProducts.findIndex(\r\n      pedido => pedido.productId === pedidoId\r\n    );\r\n\r\n    //Update object's name property.\r\n    storageProducts[objIndex].quantidade = 2;\r\n\r\n    storageProducts[objIndex].observacao = \"Laila\";\r\n\r\n    //Log object to console again.\r\n    console.log(storageProducts);\r\n    console.log(storageProducts[objIndex]);\r\n    localStorage.setItem(\"products\", JSON.stringify(storageProducts));\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        marginTop: \"30px\",\r\n        backgroundColor: \"#F6F6F6\",\r\n        padding: \"10px\",\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0\r\n      }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col text-center text-muted\">\r\n            <h2>\r\n              TOTAL A PAGAR: <b>R$ {total}</b>\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col text-center\">\r\n            <button\r\n              onClick={confirmarPedido}\r\n              className=\"btn btn-info btn-lg\"\r\n              style={{ border: \"0px solid green\" }}\r\n            >\r\n              Confirmar Pedido\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/* ProductList */\r\nexport default class ProductList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      total: 0,\r\n      productList: \"\"\r\n    };\r\n\r\n    this.calculateTotal = this.calculateTotal.bind(this);\r\n    this.showProduct = this.showProduct.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ productList: ListaProdutos });\r\n    }, 1000);\r\n  }\r\n\r\n  calculateTotal(precoUnitario) {\r\n    this.setState({\r\n      total: this.state.total + precoUnitario\r\n    });\r\n    console.log(this.state.total);\r\n  }\r\n\r\n  showProduct(descricao) {\r\n    console.log(descricao);\r\n    alert(descricao);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.productList)\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"text-center\" role=\"alert\">\r\n            <span\r\n              className=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Carregando...\r\n          </div>\r\n        </div>\r\n      );\r\n    var component = this;\r\n\r\n    var products = this.state.productList.map((product, _key) => (\r\n      <React.Fragment key={_key}>\r\n        <Product\r\n          id={product.id}\r\n          nome={product.nome}\r\n          imagem={product.imagem}\r\n          precoUnitario={product.preco}\r\n          descricao={product.descricao}\r\n          handleTotal={component.calculateTotal}\r\n        />\r\n      </React.Fragment>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <a href=\"#\">Início</a>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                Lista de Produtos\r\n              </li>\r\n            </ol>\r\n          </nav>\r\n          <h1>Lista</h1>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          {products}\r\n          <TotalComponent total={this.state.total} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","sourceRoot":""}