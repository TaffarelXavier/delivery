{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.87978dc30e8ff23b7a22.hot-update.js","sources":["webpack:///./components/Carrinho/index.js"],"sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport RemoveCircleOutlineRoundedIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\r\nimport ShoppingCartSharpIcon from \"@material-ui/icons/ShoppingCartSharp\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Loadable from \"react-loadable\";\r\nimport LazyLoad from \"../LazyLoad\";\r\nimport LocalStorageHandler from \"../LocalStorageHandler\";\r\nimport useWidth from \"../useWidth\";\r\n\r\n\r\n\r\nconst DialogFormConfirm = Loadable({\r\n  loader: () => import(\"../DialogFormConfirm\"),\r\n  loading() {\r\n    return <LazyLoad height=\"30px\" margintop=\"5px\" />;\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(4),\r\n    float: \"right\"\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  quantidade: {\r\n    textAlign: \"right\",\r\n    width: 40,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    display: \"inline\",\r\n    border: \"0\",\r\n    borderBottom: \"1px solid #ccc\",\r\n    position: \"relative\",\r\n    top: -4\r\n  },\r\n  cardAvatar: {\r\n    border: \"1px solid red\"\r\n  },\r\n  cardContent: {\r\n    border: \"1px solid lime\"\r\n  },\r\n  cardActions: {\r\n    border: \"1px solid blue\"\r\n  },\r\n  valorUnitario: {\r\n    border: \"0px solid red\",\r\n    color: \"rgb(244,67,54)\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      fontWeight: \"bold\"\r\n    }\r\n  },\r\n  mdlCard: {\r\n    flexDirection: \"column\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    overflow: \"hidden\",\r\n    zIndex: 1,\r\n    position: \"relative\",\r\n    background: \"#fff\",\r\n    borderRadius: \"2px\",\r\n    boxSizing: \"border-box\"\r\n  },\r\n  cardItemMenu: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"100%\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 400\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 400\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: 20\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      width: 400\r\n    },\r\n    margin: \"0px auto\",\r\n    minHeight: \"10px\"\r\n  },\r\n  info_item: {\r\n    float: \"none\"\r\n  },\r\n  nomeItemMenu: {\r\n    fontFamily: \"Lato\",\r\n    color: \"#444\",\r\n    fontSize: \"18px\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    marginTop: \"0px\",\r\n    verticalAlign: \"baseline\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    lineHeight: \"35px\"\r\n  },\r\n  descItemMenu: {\r\n    fontFamily: \"Lato\",\r\n    color: \"#444\",\r\n    fontSize: \"12px\",\r\n    margin: 0,\r\n    padding: 0,\r\n    marginTop: \"0px\",\r\n    verticalAlign: \"baseline\",\r\n    lineHeight: \"14px\",\r\n    textTransform: \"capitalize\"\r\n  },\r\n  img_prod: {\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    float: \"left\",\r\n    margin: \"10px\",\r\n    borderRadius: \"5px\",\r\n    maxWidth: \"100%\"\r\n  },\r\n  mdlCard__actions: {\r\n    fontSize: \"12px\",\r\n    lineHeight: \"normal\",\r\n    width: \"100%\",\r\n    backgroundColor: \"transparent\",\r\n    padding: \"0px\",\r\n    boxSizing: \"border-box\",\r\n    borderTop: \"0px solid rgba(0,0,0,.1)\",\r\n    borderBottom: \"1px solid rgba(0,0,0,.1)\"\r\n  },\r\n  myButton: {\r\n    color: \"rgb(244,67,54)\",\r\n    border: \"none\",\r\n    borderRadius: \"2px\",\r\n    display: \"block\",\r\n    width: 40,\r\n    minWidth: \"30px\",\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100\r\n  });\r\n\r\n  const handleClick = event => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func\r\n};\r\n\r\nconst Carrinho = props => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(null);\r\n  const [quantidade, setQuantidade] = useState(0);\r\n  const [valorTotal, setValorTotal] = useState(0);\r\n  const [observacao, setObservacao] = useState(\"\");\r\n  const [openDialog, setOpenDialog] = useState(!1);\r\n\r\n  let produtos = [];\r\nconst wit = useWidth();\r\n  useEffect(() => {\r\n    console.log(wit);\r\n    setData(JSON.parse(localStorage.getItem(\"products\")));\r\n  });\r\n\r\n  const remover = id => {\r\n    LocalStorageHandler.removeByIdInArray(id, \"products\");\r\n    setData(JSON.parse(localStorage.getItem(\"products\")));\r\n  };\r\n\r\n  function addProduct(produto_id, qtd) {\r\n    if (localStorage.getItem(\"products\")) {\r\n      produtos = JSON.parse(localStorage.getItem(\"products\"));\r\n    }\r\n    //Pega o index\r\n    let objIndex = produtos.findIndex(\r\n      pedido => pedido.productId === produto_id\r\n    );\r\n    //products[objIndex].productId = produto_id;\r\n    produtos[objIndex].quantidade = qtd;\r\n    produtos[objIndex].observacao = \"\";\r\n    produtos[objIndex].descricao = \"\";\r\n    localStorage.setItem(\"products\", JSON.stringify(produtos));\r\n  }\r\n\r\n  function add(produto_id, qtd) {\r\n    let quant = parseInt(quantidade) + 1;\r\n\r\n    setQuantidade(quant);\r\n\r\n    let d = parseInt(qtd) + 1;\r\n\r\n    addProduct(produto_id, d);\r\n  }\r\n\r\n  function subtract(produto_id, qtd) {\r\n    let qt = parseInt(qtd) - 1;\r\n\r\n    setQuantidade(qt);\r\n\r\n    addProduct(produto_id, qt);\r\n  }\r\n\r\n  function onChangeQuantidade(ev) {\r\n    let quant = parseInt(ev.target.value);\r\n    setQuantidade(quant);\r\n    addProduct();\r\n    setValorTotal((props.precoUnitario * parseInt(quant)).toFixed(2));\r\n  }\r\n\r\n  function alterarTextoTextArea(ev) {\r\n    setObservacao(ev.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (quantidade <= 0 || isNaN(parseInt(quantidade))) {\r\n      setValorTotal(0);\r\n      setQuantidade(0);\r\n    }\r\n    // props.callbackParent(LocalStorageHandler.count(\"products\"));\r\n  }, [quantidade]);\r\n\r\n  let _valorTotal = 0;\r\n\r\n  let conteudo = null;\r\n\r\n  if (data !== null) {\r\n    if (data.length > 0) {\r\n      conteudo = data.map((produto, index) => {\r\n        let produto_id = produto.productId;\r\n\r\n        let quant = produto.quantidade;\r\n\r\n        let valTotal = produto.preco * quant;\r\n\r\n        _valorTotal += valTotal;\r\n\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <div\r\n              className={classes.cardItemMenu}\r\n              id={produto_id}\r\n              title={produto.nome}\r\n            >\r\n              <div className={classes.mdlCard}>\r\n                <div className={classes.info_item}>\r\n                  <Avatar\r\n                    alt={\"\"}\r\n                    src={produto.imagem}\r\n                    className={classes.img_prod}\r\n                  />\r\n                  <p className={classes.nomeItemMenu}>\r\n                    {produto.nome}\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      className={classes.menuButton}\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      onClick={() => remover(produto_id)}\r\n                      title={`Clique para remover ${produto.nome} do carrinho.`}\r\n                    >\r\n                      <DeleteSharpIcon />\r\n                    </IconButton>\r\n                  </p>\r\n                  <p className={classes.descItemMenu}>\r\n                    {produto.descricao.length == 0 ? (\r\n                      <>{produto.nome}</>\r\n                    ) : (\r\n                      <>{produto.descricao}</>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n                <Grid container className={classes.mdlCard__actions}>\r\n                  <Grid item xs={7}>\r\n                    <Button className={classes.valorUnitario}>\r\n                      <b>\r\n                        R${\" \"}\r\n                        {produto.preco != undefined\r\n                          ? produto.preco.toFixed(2)\r\n                          : null}\r\n                      </b>\r\n                    </Button>\r\n                    {quant > 0 && <>Subtotal: R$ {valTotal.toFixed(2)}</>}\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    xs={5}\r\n                  >\r\n                    <Button\r\n                      onClick={() => {\r\n                        subtract(produto_id, quant);\r\n                      }}\r\n                      disabled={quant < 1}\r\n                      className={classes.myButton}\r\n                    >\r\n                      <RemoveCircleOutlineRoundedIcon />\r\n                    </Button>\r\n                    <input\r\n                      type=\"number\"\r\n                      onChange={ev => onChangeQuantidade(ev)}\r\n                      value={quant}\r\n                      className={classes.quantidade}\r\n                    />\r\n                    <Button\r\n                      className={classes.myButton}\r\n                      onClick={() => {\r\n                        add(produto_id, quant);\r\n                      }}\r\n                    >\r\n                      <AddCircleOutlineIcon />\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n            {/* <hr\r\n              style={{\r\n                border: 0,\r\n                borderTop: \"1px solid #ddd\",\r\n                margin: 0,\r\n                padding: 0\r\n              }}\r\n            /> */}\r\n          </React.Fragment>\r\n        );\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div style={{ position: \"relative\" }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar variant=\"dense\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <ShoppingCartSharpIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              <b>MEU CARRINHO</b>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>{conteudo}</div>\r\n        <AppBar position=\"static\">\r\n          <Toolbar variant=\"dense\">\r\n            <Grid item xs={7} sm={7}>\r\n              <b>VALOR TOTAL: R$ {_valorTotal.toFixed(2)}</b>\r\n            </Grid>\r\n            <Grid item xs={5} sm={5}>\r\n              <Button\r\n                variant=\"contained\"\r\n                align=\"right\"\r\n                size=\"small\"\r\n                onClick={ev => setOpenDialog(true)}\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                <b>CONCLUIR PEDIDO</b>\r\n              </Button>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <DialogFormConfirm\r\n        open={openDialog}\r\n        onClose={() => {\r\n          setOpenDialog(false);\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Carrinho;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAOA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AADA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAlHA;AAAA;AACA;AA6HA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AANA;AACA;AAQA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}