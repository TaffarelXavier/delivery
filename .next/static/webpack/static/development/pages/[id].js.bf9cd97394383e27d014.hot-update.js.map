{"version":3,"file":"static/webpack/static\\development\\pages\\[id].js.bf9cd97394383e27d014.hot-update.js","sources":["webpack:///./pages/.js"],"sourcesContent":["import { makeStyles, useTheme } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Menu, Search } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Loadable from \"react-loadable\";\r\nimport AlertNotHasProducts from \"../components/AlertNotHasProducts\";\r\nimport ApiRest from \"../components/ApiRest\";\r\nimport Categorias from \"../components/Categorias\";\r\nimport Footer from \"../components/Footer\";\r\nimport LocalStorageHandler from \"../components/LocalStorageHandler\";\r\nimport MyMenu from \"../components/Menu\";\r\nimport Produtos from \"../components/Produtos\";\r\nimport SpinnerTeste from \"../components/SpinnerTeste/Produtos\";\r\nimport TotalPedidos from \"../components/TotalPedidos\";\r\nimport useReplaceString from \"../components/useReplaceString\";\r\nimport useWidth from \"../components/useWidth\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nconst NavigationBottom = Loadable({\r\n  loader: () => import(\"../components/NavigationBottom\"),\r\n  loading() {\r\n    return (\r\n      <>\r\n        <Skeleton height=\"80%\" width=\"100%\" />\r\n      </>\r\n    );\r\n  }\r\n});\r\n\r\nconst dataCategorias = [\r\n  {\r\n    nome: \"ALIMENTOS\",\r\n    quantidade: parseInt(2),\r\n    mostrar: !0\r\n  },\r\n  {\r\n    nome: \"BEBIDAS\",\r\n    quantidade: parseInt(3),\r\n    mostrar: !0\r\n  },\r\n  {\r\n    nome: \"BAZAR\",\r\n    quantidade: parseInt(5),\r\n    mostrar: !0\r\n  },\r\n  {\r\n    nome: \"DESCARTÁVEIS\",\r\n    quantidade: parseInt(8),\r\n    mostrar: !0\r\n  },\r\n  {\r\n    nome: \"MATINAIS\",\r\n    quantidade: parseInt(4),\r\n    mostrar: !0\r\n  },\r\n  {\r\n    nome: \"PERECÍVEIS\",\r\n    quantidade: parseInt(45),\r\n    mostrar: !0\r\n  },\r\n  {\r\n    nome: \"HIGIENE\",\r\n    quantidade: parseInt(4),\r\n    mostrar: !0\r\n  },\r\n  {\r\n    nome: \"LIMPEZA\",\r\n    quantidade: parseInt(8),\r\n    mostrar: !0\r\n  }\r\n];\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStylesDrawer  = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction DataASt(props){\r\n\r\n  const classes = useStylesDrawer();\r\n\r\nconst theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleDrawerOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\nfunction handleDrawerClose() {\r\n\tprops.handleDrawerClose(false);\r\n  }\r\n\r\nreturn(\r\n<>\r\n <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n</>\r\n);\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      background: \"url(../static/background.jpg)\",\r\n      backgroundAttachment: \"fixed\",\r\n      backgroundPosition: \"center\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\"\r\n    },\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0\r\n    },\r\n    li: {\r\n      listStyle: \"none\"\r\n    }\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  toolbar: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5)\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    border: \"0px solid blue\"\r\n  },\r\n  rootinput: {\r\n    borderRadius: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n     width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"96%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"96%\",\r\n    },\r\n    margin: \"0px auto\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  textFieldInput: {\r\n    backgroundColor: theme.palette.common.white,\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:focus\": {\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n    }\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4\r\n  },\r\n  footerNavigationBottom: {\r\n    paddingLeft: theme.spacing(0),\r\n    paddingRight: theme.spacing(0),\r\n    background: \"white\",\r\n    border: \"0px solid gold\",\r\n    \"& p\": {\r\n      border: \"0px solid red\",\r\n      \"& span\": {}\r\n    },\r\n    \"& div\": {\r\n      border: \"0px solid lime\"\r\n    }\r\n  },\r\n  categorias: {\r\n    backgroundColor: \"white\"\r\n  }\r\n}));\r\n\r\nconst Index = props => {\r\n  const router = useRouter();\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const [produtosAsObject, setProdutosAsObject] = React.useState([]);\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [countPedidosLocal, setCountPedidosLocal] = useState(!1);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [iniciar, setIniciar] = useState(true);\r\n  const [empresa, setEmpresa] = useState({ config: [] });\r\n  const [nome_fantasia, setNomeFantasia] = useState(\"Carregando...\");\r\n  const [produtos, setProdutos] = useState({ dados: [], isLoading: false });\r\n  const [empresaId, setEmpresaId] = useState(null);\r\n  const [daaaaaaata, setDaaaaaaata] = useState(null);\r\n  const [abrirDrawer, setAbrirDrawer] = useState(!1);\r\n\r\n  let screenSize = useWidth();\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  function goBack() {\r\n    window.history.back();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setData(JSON.parse(localStorage.getItem(\"products\")));\r\n    onAtualizarCount();\r\n    if (iniciar == true) {\r\n      setIniciar(false);\r\n      //setProdutosAsObject(props.shows);\r\n    }\r\n  }, []);\r\n\r\n  /*\r\nBUSCA OS DADOS DA EMPRESA\r\n*/\r\n  useEffect(() => {\r\n    let id = router.query.id;\r\n    const fetchData = async () => {\r\n      const result = await ApiRest.get(\"/empresas/\" + id);\r\n      setEmpresa(result.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n   * PRODUTOS\r\n   */\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (empresaId !== null) {\r\n        const result = await ApiRest.get(\"/produtos/empresa/\" + empresaId);\r\n        setProdutos({ data: result.data, isLoading: true });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [empresaId]);\r\n\r\n  useEffect(() => {\r\n    if (!empresa.config) {\r\n      if (screenSize === \"xs\") {\r\n        setNomeFantasia(useReplaceString(empresa[\"0\"].nome_fantasia, 2));\r\n      } else {\r\n        setNomeFantasia(empresa[\"0\"].nome_fantasia);\r\n      }\r\n      setEmpresaId(empresa[\"0\"].id);\r\n    }\r\n  }, [empresa]);\r\n\r\n  function onChangeInputSearch(ev) {\r\n    let valor = ev.target.value;\r\n\r\n    setSearch(valor.toUpperCase());\r\n\r\n    if (valor.trim() !== \"\") {\r\n      /*let adults = Object.values(props.shows).filter(produto => {\r\n\t\t\t\tif (produto.id !== undefined) {\r\n\t\t\t\t\tif (produto.nome.toUpperCase().includes(valor.toUpperCase())) {\r\n\t\t\t\t\t\treturn produto;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetProdutosAsObject(adults);*/\r\n    } else {\r\n      //setProdutosAsObject(props.shows);\r\n    }\r\n    if (ev.keyCode == 27) {\r\n      //setProdutosAsObject(props.shows);\r\n      setSearch(\"\");\r\n    }\r\n  }\r\n\r\n  function onAtualizarCount() {\r\n    setCountPedidosLocal(LocalStorageHandler.count(\"products\"));\r\n  }\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    if (LocalStorageHandler.count(\"products\") > 0) {\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n\r\n  function confirmarPedido() {\r\n    alert(JSON.stringify(LocalStorageHandler.getDataByKey(\"products\")));\r\n    LocalStorageHandler.remove(\"products\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n<DataASt  open={abrirDrawer} handleDrawerClose={(valor)=>setAbrirDrawer(valor)}/>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        color=\"default\"\r\n        elevation={0}\r\n        className={classes.appBar}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n{ /*         <IconButton onClick={goBack} className={classes.margin}>\r\n            <ArrowBackIcon color=\"default\" fontSize=\"large\"/>\r\n          </IconButton>*/}\r\n<IconButton onClick={()=>{setAbrirDrawer(!0)}}>\r\n\t<MenuIcon color=\"primary\" fontSize=\"default\"/>\r\n </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            <Link href=\"../\">\r\n              {produtos.isLoading == false ? (\r\n                <>\r\n                  <Skeleton variante=\"text\" height={20} width={200} />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Grid>{nome_fantasia}</Grid>\r\n                </>\r\n              )}\r\n            </Link>\r\n          </Typography>\r\n          {!1 && (\r\n            <>\r\n              <Button\r\n                onClick={confirmarPedido}\r\n                href=\"#\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                className={classes.link}\r\n              >\r\n                CONFIRMAR PEDIDO\r\n              </Button>\r\n            </>\r\n          )}\r\n          <IconButton\r\n            onClick={handleProfileMenuOpen}\r\n            aria-label=\"Account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n          >\r\n            <TotalPedidos countProdutos={countPedidosLocal} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container maxWidth=\"md\" className={classes.cardGrid}>\r\n        {produtos.isLoading == false && (\r\n          <>\r\n            <br />\r\n            <SpinnerTeste data={[1, 2, 3, 4, 5, 6, 7]} />\r\n          </>\r\n        )}\r\n        {produtos.isLoading == true && empresaId != null && (\r\n          <>\r\n            <br />\r\n            {produtos.data.hasOwnProperty(\"erro\") && produtos.data ? (\r\n              <>\r\n                <AlertNotHasProducts label=\"Não há Produtos para esta empresa.\" />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Grid container justify=\"center\">\r\n  <Hidden only={['xs']}>                \r\n<Grid  xs=\"12\" sm=\"4\" md=\"3\" className={classes.categorias}>\r\n                    <Grid item>\r\n                      <Categorias datacat={dataCategorias} />\r\n                    </Grid>\r\n                  </Grid>\r\n  </Hidden>  \r\n                  <Grid xs=\"12\" sm=\"8\"  md=\"9\">\r\n                    <Grid item>\r\n                      <Grid container justify=\"center\">\r\n                        <Grid container>\r\n                          <Paper className={classes.rootinput}>\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              aria-label=\"Menu\"\r\n                            >\r\n                              <Menu />\r\n                            </IconButton>\r\n                            <InputBase\r\n                              className={classes.textFieldInput}\r\n                              placeholder=\"Pesquisar\"\r\n                              inputProps={{\r\n                                \"aria-label\": \"Search Google Maps\"\r\n                              }}\r\n                            />\r\n                            <Divider className={classes.divider} />\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              aria-label=\"Search\"\r\n                            >\r\n                              <Search />\r\n                            </IconButton>\r\n                          </Paper>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {Object.values(produtos.data).map((product, _key) => {\r\n                        return (\r\n                          <React.Fragment key={_key}>\r\n                            <Produtos\r\n                              callbackParent={valor =>\r\n                                setCountPedidosLocal(valor)\r\n                              }\r\n                              produto={product}\r\n                              id={product.id}\r\n                              nome={product.nome.toUpperCase()}\r\n                              imagem={product.imagem}\r\n                              precoUnitario={product.preco}\r\n                              descricao={product.descricao}\r\n                            />\r\n                          </React.Fragment>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Container>\r\n      <Container className={classes.footerNavigationBottom} maxWidth=\"xl\">\r\n        <Footer />\r\n      </Container>\r\n      <MyMenu\r\n        anchorEl={anchorEl}\r\n        handleMenuClose={handleMenuClose}\r\n        abrir={isMenuOpen}\r\n      />\r\n      {/* <NavigationBottom totalPro={countPedidosLocal} /> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async function(ctx) {\r\n  const configSite = await import(\"../db/config.dev.json\");\r\n\r\n  return {\r\n    config: configSite\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AARA;AAWA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AACA;AAFA;AAIA;AALA;AA/CA;AAAA;AACA;AAuDA;AAEA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA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","sourceRoot":""}