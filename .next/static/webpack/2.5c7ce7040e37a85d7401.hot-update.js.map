{"version":3,"file":"static/webpack/2.5c7ce7040e37a85d7401.hot-update.js","sources":["webpack:///./components/MostrarEmpresas/index.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { GridOn, ReorderRounded } from \"@material-ui/icons\";\r\nimport ApiRest from \"../ApiRest\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    boxShadow: \"0px 0px 15px 0px rgba(10,10,10,0.1)\"\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8)\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    cursor: \"pointer !important\"\r\n  },\r\n  _grid: {\r\n    cursor: \"pointer !important\"\r\n  }\r\n}));\r\n\r\n/**\r\n * Mostra os Ã­cones das empresas\r\n */\r\nexport default function MostrarEmpresas(props) {\r\n  const [empresas, setEmpresas] = useState({ hits: [] });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await ApiRest.get(\"/empresas\");\r\n      setEmpresas(result.data);\r\n      props.onLoadedComplete(!0);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  function mouseOverStyle(ev) {\r\n    ev.preventDefault();\r\n    ev.target.classList.add(\"hoverUp\");\r\n  }\r\n\r\n  function mouseOutStyle(ev, id) {\r\n    ev.preventDefault();\r\n    ev.target.classList.remove(\"hoverDown\");\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* {empresas.length === undefined && (\r\n        <>\r\n          <SpinnerDelivery label=\" Carregando empresas, aguarde, por gentileza... \" />\r\n        </>\r\n      )} */}\r\n      <AppBar\r\n        position=\"static\"\r\n        color=\"default\"\r\n        elevation={0}\r\n        className={classes.appBar}\r\n      >\r\n        <Toolbar className={classes.toolbar2}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"textPrimary\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          />\r\n          <IconButton\r\n            aria-label=\"Account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"primary\"\r\n          >\r\n            <GridOn />\r\n          </IconButton>\r\n          <Divider className={classes.divider} />\r\n          <IconButton\r\n            aria-label=\"Account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"primary\"\r\n          >\r\n            <ReorderRounded />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container spacing={2}>\r\n        {Object.values(empresas).map((empresa, _key) => (\r\n          <Grid\r\n            item\r\n            key={_key}\r\n            title={\"Clique para entrar em \" + empresa.nome_fantasia}\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            className={classes._grid}\r\n            onClick={() => {\r\n              window.location.href = empresa.url.toLowerCase();\r\n            }}\r\n          >\r\n            <Card\r\n              className={classes.card}\r\n              onMouseOut={ev => mouseOutStyle(ev, empresa.id)}\r\n              onMouseOver={ev => mouseOverStyle(ev, empresa.id)}\r\n            >\r\n              <LazyLoad>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={empresa.logomarca}\r\n                />\r\n              </LazyLoad>\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {empresa.nome_fantasia}\r\n                </Typography>\r\n                <div> {empresa.telefone}</div>\r\n                <Typography>{empresa.descricao}</Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\" dataobj={empresa}>\r\n                  IR PARA A LOJA\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AArBA;AAAA;AA0BA;;;;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCA;AA0CA;;;;A","sourceRoot":""}