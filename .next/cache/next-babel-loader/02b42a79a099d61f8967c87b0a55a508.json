{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\Categorias\\\\index.js\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useRouter } from \"next/router\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport ApiRest from \"../ApiRest\";\n/**\r\n * Componente categoria\r\n */\n\nfunction Categorias(props) {\n  var _useState = useState({\n    data: null,\n    isLoaded: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      categorias = _useState2[0],\n      setCategorias = _useState2[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    var id = router.query.id;\n\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ApiRest.get(\"/categories/company/\" + id);\n\n              case 2:\n                result = _context.sent;\n                setCategorias({\n                  data: result.data,\n                  isLoaded: true\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(List, {\n    style: {\n      border: \"0px solid red\",\n      padding: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"CATEGORIAS\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    light: true,\n    variant: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), !categorias.isLoaded && React.createElement(React.Fragment, null, [1, 2, 3, 4].map(function (value, index) {\n    return React.createElement(List, {\n      key: index,\n      style: {\n        border: \"0px solid red\",\n        padding: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: React.createElement(Skeleton, {\n        width: \"90%\",\n        height: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  })), categorias.isLoaded && React.createElement(React.Fragment, null, categorias.data.map(function (category, index) {\n    return React.createElement(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(List, {\n      title: \"Clique para pesquisar produtos da categoria: \".concat(category.category_name),\n      onClick: function onClick() {\n        alert(_JSON$stringify(category));\n      },\n      style: {\n        border: \"0px solid red\",\n        padding: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      secondary: React.createElement(Typography, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, category.category_name.toUpperCase())),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, category.amount_products))))), React.createElement(Divider, {\n      light: true,\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  })));\n}\n\nexport default Categorias;","map":null,"metadata":{},"sourceType":"module"}