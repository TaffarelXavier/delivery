{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\DialogFormConfirm\\\\index.js\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport LocalStorageHandler from \"../LocalStorageHandler\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    \"@global\": {\n      body: {\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    root: {\n      textAlign: \"center\"\n    },\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    }\n  };\n});\n\nfunction SignIn() {\n  var inputRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setEditing = _useState2[1];\n\n  useEffect(function () {\n    if (!isEditing) {\n      inputRef.current.focus();\n      setEditing(!0);\n    }\n  }, [isEditing]);\n  var classes = useStyles();\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    type: \"text\",\n    id: \"email\",\n    label: \"Email ou Telefone\",\n    name: \"email\",\n    autoFocus: true,\n    inputRef: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"endereco\",\n    label: \"Endereco\",\n    type: \"text\",\n    id: \"endereco\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n}\n\nexport default function SimpleDialog(props) {\n  var onClose = props.onClose,\n      open = props.open;\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  var classes = useStyles();\n\n  function handleClose() {\n    onClose(true);\n  }\n\n  function onCloncluirPedido() {\n    alert(_JSON$stringify(LocalStorageHandler.getDataByKey(\"products\")) + \"\\n\\n\" + LocalStorageHandler.remove(\"products\"));\n    onClose(!0);\n  }\n\n  return React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Box, {\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Concluir Pedido\")), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Verificaremos que voc\\xEA n\\xE3o est\\xE1 logado ou que n\\xE3o possui uma conta, ent\\xE3o, para proseguir, digite seu n\\xFAmero de telefone e endere\\xE7o, e o seu pedido ser\\xE1 feito.\"), React.createElement(SignIn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"default\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Fechar\"), React.createElement(Button, {\n    onClick: onCloncluirPedido,\n    color: \"primary\",\n    variant: \"contained\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Confirmar\")));\n}","map":null,"metadata":{},"sourceType":"module"}