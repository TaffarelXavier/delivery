{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\node\\\\blog\\\\web\\\\pages\\\\_document.js\";\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/styles';\nimport theme from '../src/theme';\n\nvar MyDocument =\n/*#__PURE__*/\nfunction (_Document) {\n  _inherits(MyDocument, _Document);\n\n  function MyDocument() {\n    _classCallCheck(this, MyDocument);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyDocument).apply(this, arguments));\n  }\n\n  _createClass(MyDocument, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"html\", {\n        lang: \"pt-br\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"meta\", {\n        charSet: \"utf-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(\"meta\", {\n        name: \"theme-color\",\n        content: theme.palette.primary.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(NextScript, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MyDocument;\n}(Document);\n\nMyDocument.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var sheets, originalRenderPage, initialProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Resolution order\n            //\n            // On the server:\n            // 1. app.getInitialProps\n            // 2. page.getInitialProps\n            // 3. document.getInitialProps\n            // 4. app.render\n            // 5. page.render\n            // 6. document.render\n            //\n            // On the server with error:\n            // 1. document.getInitialProps\n            // 2. app.render\n            // 3. page.render\n            // 4. document.render\n            //\n            // On the client\n            // 1. app.getInitialProps\n            // 2. page.getInitialProps\n            // 3. app.render\n            // 4. page.render\n            // Render app and page and get the context of the page with collected side effects.\n            sheets = new ServerStyleSheets();\n            originalRenderPage = ctx.renderPage;\n\n            ctx.renderPage = function () {\n              return originalRenderPage({\n                enhanceApp: function enhanceApp(App) {\n                  return function (props) {\n                    return sheets.collect(React.createElement(App, _extends({}, props, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 62\n                      },\n                      __self: this\n                    })));\n                  };\n                }\n              });\n            };\n\n            _context.next = 5;\n            return Document.getInitialProps(ctx);\n\n          case 5:\n            initialProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, initialProps, {\n              // Styles fragment is rendered after the app and page rendering finish.\n              styles: [React.createElement(React.Fragment, {\n                key: \"styles\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 71\n                },\n                __self: this\n              }, initialProps.styles, sheets.getStyleElement())]\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default MyDocument;","map":null,"metadata":{},"sourceType":"module"}