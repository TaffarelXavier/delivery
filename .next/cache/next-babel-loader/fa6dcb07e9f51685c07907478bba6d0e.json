{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\Produtos\\\\index.js\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineRoundedIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\nimport React, { useEffect, useState } from \"react\";\nimport LocalStorageHandler from \"../LocalStorageHandler\"; //values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\n\nvar useStyles = makeStyles(function (theme) {\n  var _cardItemMenu;\n\n  return {\n    quantidade: {\n      textAlign: \"right\",\n      width: 40,\n      paddingTop: 5,\n      paddingBottom: 5,\n      display: \"inline\",\n      border: \"0\",\n      borderBottom: \"1px solid #ccc\",\n      position: \"relative\",\n      top: -4\n    },\n    valorUnitario: _defineProperty({\n      border: \"0px solid red\",\n      color: \"rgb(244,67,54)\"\n    }, theme.breakpoints.up(\"xs\"), {\n      fontWeight: \"bold\"\n    }),\n    mdlCard: {\n      flexDirection: \"column\",\n      fontSize: \"16px\",\n      fontWeight: 400,\n      overflow: \"hidden\",\n      zIndex: 1,\n      position: \"relative\",\n      background: \"#fff\",\n      borderRadius: \"2px\",\n      boxSizing: \"border-box\",\n      border: \"0px solid red\"\n    },\n    cardItemMenu: (_cardItemMenu = {}, _defineProperty(_cardItemMenu, theme.breakpoints.up(\"xs\"), {\n      width: \"100%\"\n    }), _defineProperty(_cardItemMenu, theme.breakpoints.up(\"sm\"), {\n      width: \"96%\"\n    }), _defineProperty(_cardItemMenu, theme.breakpoints.up(\"md\"), {\n      width: \"96%\"\n    }), _defineProperty(_cardItemMenu, theme.breakpoints.up(\"lg\"), {\n      width: \"96%\"\n    }), _defineProperty(_cardItemMenu, \"margin\", \"10px auto\"), _defineProperty(_cardItemMenu, \"minHeight\", \"10px\"), _defineProperty(_cardItemMenu, \"border\", \"0px solid red\"), _cardItemMenu),\n    info_item: {\n      \"float\": \"none\"\n    },\n    nomeItemMenu: {\n      fontFamily: \"Lato\",\n      color: \"#444\",\n      fontSize: \"18px\",\n      margin: \"0\",\n      padding: \"0\",\n      marginTop: \"0px\",\n      verticalAlign: \"baseline\",\n      textTransform: \"capitalize\",\n      fontWeight: \"bold\",\n      lineHeight: \"35px\"\n    },\n    descItemMenu: {\n      fontFamily: \"Lato\",\n      color: \"#444\",\n      fontSize: \"12px\",\n      margin: 0,\n      padding: 0,\n      marginTop: \"0px\",\n      verticalAlign: \"baseline\",\n      lineHeight: \"14px\",\n      textTransform: \"capitalize\"\n    },\n    img_prod: {\n      width: \"80px\",\n      height: \"80px\",\n      \"float\": \"left\",\n      margin: \"10px\",\n      borderRadius: \"5px\",\n      maxWidth: \"100%\"\n    },\n    mdlCard__actions: {\n      fontSize: \"12px\",\n      lineHeight: \"normal\",\n      width: \"100%\",\n      backgroundColor: \"transparent\",\n      padding: \"8px\",\n      boxSizing: \"border-box\",\n      borderTop: \"1px solid rgba(0,0,0,.1)\"\n    },\n    myButton: {\n      color: \"rgb(244,67,54)\",\n      border: \"none\",\n      display: \"block\",\n      width: 35,\n      minWidth: \"30px\",\n      padding: 0\n    }\n  };\n});\n/**\r\n * Component: Produtos\r\n */\n\nexport default function Produtos(props) {\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      quantidade = _useState2[0],\n      setQuantidade = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valorTotal = _useState4[0],\n      setValorTotal = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      observacao = _useState6[0],\n      setObservacao = _useState6[1];\n\n  function addProduct() {\n    var products = [];\n\n    if (localStorage.getItem(\"products\")) {\n      products = JSON.parse(localStorage.getItem(\"products\"));\n    } //Desestruturação Javascript\n\n\n    var id = props.id,\n        nome = props.nome,\n        imagem = props.imagem,\n        precoUnitario = props.precoUnitario,\n        descricao = props.descricao; //Pega o index\n\n    var objIndex = products.findIndex(function (pedido) {\n      return pedido.productId === id;\n    }); //Caso não exista\n\n    if (objIndex === -1) {\n      products.push({\n        productId: id,\n        nome: nome,\n        imagem: imagem,\n        quantidade: quantidade + 1,\n        observacao: observacao,\n        preco: precoUnitario,\n        descricao: descricao\n      });\n      localStorage.setItem(\"products\", _JSON$stringify(products));\n    } else {\n      products[objIndex].productId = id;\n      products[objIndex].quantidade = quantidade + 1;\n      products[objIndex].observacao = observacao;\n      products[objIndex].nome = nome;\n      products[objIndex].imagem = imagem;\n      products[objIndex].preco = precoUnitario;\n      products[objIndex].descricao = descricao;\n      localStorage.setItem(\"products\", _JSON$stringify(products));\n    }\n  }\n\n  function add() {\n    var quant = _parseInt(quantidade) + 1;\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal((props.precoUnitario * quant).toFixed(2));\n  }\n\n  function subtract() {\n    var quant = _parseInt(quantidade) - 1;\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal(props.precoUnitario * quant);\n  }\n\n  function onChangeQuantidade(ev) {\n    var quant = _parseInt(ev.target.value);\n\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal((props.precoUnitario * _parseInt(quant)).toFixed(2));\n  }\n\n  useEffect(function () {\n    if (quantidade <= 0 || isNaN(_parseInt(quantidade))) {\n      setValorTotal(0);\n      setQuantidade(0);\n    }\n\n    props.callbackParent(LocalStorageHandler.count(\"products\"));\n  }, [quantidade]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classes.cardItemMenu,\n    id: props.id,\n    title: props.nome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.mdlCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.info_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: props.imagem,\n    className: classes.img_prod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.nomeItemMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, props.nome), React.createElement(\"div\", {\n    className: classes.descItemMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, props.descricao.length == 0 ? React.createElement(React.Fragment, null, props.nome) : React.createElement(React.Fragment, null, props.descricao))), React.createElement(Grid, {\n    container: true,\n    className: classes.mdlCard__actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.valorUnitario,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"R$\", \" \", props.precoUnitario != undefined ? props.precoUnitario.toFixed(2) : null)), quantidade > 0 && React.createElement(React.Fragment, null, \"Subtotal: R$ \", valorTotal)), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: subtract,\n    disabled: quantidade < 1,\n    className: classes.myButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(RemoveCircleOutlineRoundedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"number\",\n    onChange: function onChange(ev) {\n      return onChangeQuantidade(ev);\n    },\n    value: quantidade,\n    className: classes.quantidade,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.myButton,\n    onClick: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(AddCircleOutlineIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  })))))));\n}","map":null,"metadata":{},"sourceType":"module"}