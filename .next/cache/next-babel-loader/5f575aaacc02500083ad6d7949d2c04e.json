{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\Carrinho\\\\index.js\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport RemoveCircleOutlineRoundedIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\nimport ShoppingCartSharpIcon from \"@material-ui/icons/ShoppingCartSharp\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport Loadable from \"react-loadable\";\nimport LazyLoad from \"../LazyLoad\";\nimport LocalStorageHandler from \"../LocalStorageHandler\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nvar DialogFormConfirm = Loadable({\n  loader: function loader() {\n    return import(\"../DialogFormConfirm\");\n  },\n  loading: function loading() {\n    return React.createElement(LazyLoad, {\n      height: \"30px\",\n      margintop: \"5px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n});\nvar useStyles = makeStyles(function (theme) {\n  var _cardItemMenu;\n\n  return {\n    root: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    },\n    menuButton: {\n      marginRight: theme.spacing(0)\n    },\n    title: {\n      flexGrow: 1,\n      border: '0px solid lime'\n    },\n    quantidade: {\n      textAlign: \"right\",\n      width: 40,\n      paddingTop: 5,\n      paddingBottom: 5,\n      display: \"inline\",\n      border: \"0\",\n      borderBottom: \"1px solid #ccc\",\n      position: \"relative\",\n      top: -4\n    },\n    cardAvatar: {\n      border: \"1px solid red\"\n    },\n    cardContent: {\n      border: \"1px solid lime\"\n    },\n    cardActions: {\n      border: \"1px solid blue\"\n    },\n    valorUnitario: _defineProperty({\n      border: \"0px solid red\",\n      color: \"rgb(244,67,54)\"\n    }, theme.breakpoints.up(\"xs\"), {\n      fontWeight: \"bold\"\n    }),\n    mdlCard: {\n      flexDirection: \"column\",\n      fontSize: \"16px\",\n      fontWeight: 400,\n      overflow: \"hidden\",\n      zIndex: 1,\n      position: \"relative\",\n      background: \"#fff\",\n      borderRadius: \"2px\",\n      boxSizing: \"border-box\"\n    },\n    cardItemMenu: (_cardItemMenu = {}, _defineProperty(_cardItemMenu, theme.breakpoints.up(\"xs\"), {\n      width: \"100%\"\n    }), _defineProperty(_cardItemMenu, theme.breakpoints.up(\"sm\"), {\n      width: 450\n    }), _defineProperty(_cardItemMenu, theme.breakpoints.up(\"md\"), {\n      width: 450\n    }), _defineProperty(_cardItemMenu, theme.breakpoints.up(\"lg\"), {\n      width: 450\n    }), _defineProperty(_cardItemMenu, theme.breakpoints.up(\"xl\"), {\n      width: 450\n    }), _defineProperty(_cardItemMenu, \"margin\", \"0px auto\"), _defineProperty(_cardItemMenu, \"minHeight\", \"10px\"), _cardItemMenu),\n    info_item: {\n      \"float\": \"none\"\n    },\n    nomeItemMenu: {\n      fontFamily: \"Lato\",\n      color: \"#444\",\n      fontSize: \"18px\",\n      margin: \"0\",\n      padding: \"0\",\n      marginTop: \"0px\",\n      verticalAlign: \"baseline\",\n      textTransform: \"capitalize\",\n      fontWeight: \"bold\",\n      lineHeight: \"35px\"\n    },\n    descItemMenu: {\n      fontFamily: \"Lato\",\n      color: \"#444\",\n      fontSize: \"12px\",\n      margin: 0,\n      padding: 0,\n      marginTop: \"0px\",\n      verticalAlign: \"baseline\",\n      lineHeight: \"14px\",\n      textTransform: \"capitalize\"\n    },\n    img_prod: {\n      width: \"80px\",\n      height: \"80px\",\n      \"float\": \"left\",\n      margin: \"10px\",\n      borderRadius: \"5px\",\n      maxWidth: \"100%\"\n    },\n    mdlCard__actions: {\n      fontSize: \"12px\",\n      lineHeight: \"normal\",\n      width: \"100%\",\n      backgroundColor: \"transparent\",\n      padding: \"0px\",\n      boxSizing: \"border-box\",\n      borderTop: \"0px solid rgba(0,0,0,.1)\",\n      borderBottom: \"1px solid rgba(0,0,0,.1)\"\n    },\n    myButton: {\n      color: \"rgb(244,67,54)\",\n      border: \"none\",\n      borderRadius: \"2px\",\n      display: \"block\",\n      width: 40,\n      minWidth: \"30px\",\n      padding: 0,\n      margin: 0\n    }\n  };\n});\n\nfunction ScrollTop(props) {\n  var children = props.children,\n      window = props.window;\n  var classes = useStyles(); // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  var trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  var handleClick = function handleClick(event) {\n    var anchor = (event.target.ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      });\n    }\n  };\n\n  return React.createElement(Zoom, {\n    \"in\": trigger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: handleClick,\n    role: \"presentation\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, children));\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\n  window: PropTypes.func\n};\n\nvar Carrinho = function Carrinho(props) {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantidade = _useState4[0],\n      setQuantidade = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valorTotal = _useState6[0],\n      setValorTotal = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      observacao = _useState8[0],\n      setObservacao = _useState8[1];\n\n  var _useState9 = useState(!1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      openDialog = _useState10[0],\n      setOpenDialog = _useState10[1];\n\n  var produtos = [];\n  useEffect(function () {\n    setData(JSON.parse(localStorage.getItem(\"products\")));\n  }, []);\n\n  var remover = function remover(id) {\n    LocalStorageHandler.removeByIdInArray(id, \"products\");\n    setData(JSON.parse(localStorage.getItem(\"products\")));\n  };\n\n  function addProduct(produto_id, qtd) {\n    if (localStorage.getItem(\"products\")) {\n      produtos = JSON.parse(localStorage.getItem(\"products\"));\n    } //Pega o index\n\n\n    var objIndex = produtos.findIndex(function (pedido) {\n      return pedido.productId === produto_id;\n    }); //products[objIndex].productId = produto_id;\n\n    produtos[objIndex].quantidade = qtd;\n    produtos[objIndex].observacao = \"\";\n    produtos[objIndex].descricao = \"\";\n    localStorage.setItem(\"products\", _JSON$stringify(produtos));\n  }\n\n  function add(produto_id, qtd) {\n    var quant = _parseInt(quantidade) + 1;\n    setQuantidade(quant);\n    var d = _parseInt(qtd) + 1;\n    addProduct(produto_id, d);\n  }\n\n  function subtract(produto_id, qtd) {\n    var qt = _parseInt(qtd) - 1;\n    setQuantidade(qt);\n    addProduct(produto_id, qt);\n  }\n\n  function onChangeQuantidade(ev) {\n    var quant = _parseInt(ev.target.value);\n\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal((props.precoUnitario * _parseInt(quant)).toFixed(2));\n  }\n\n  function alterarTextoTextArea(ev) {\n    setObservacao(ev.target.value);\n  }\n\n  useEffect(function () {\n    if (quantidade <= 0 || isNaN(_parseInt(quantidade))) {\n      setValorTotal(0);\n      setQuantidade(0);\n    } // props.callbackParent(LocalStorageHandler.count(\"products\"));\n\n  }, [quantidade]);\n  var _valorTotal = 0;\n  var conteudo = null;\n\n  if (data !== null) {\n    if (data.length > 0) {\n      conteudo = data.map(function (produto, index) {\n        var produto_id = produto.productId;\n        var quant = produto.quantidade;\n        var valTotal = produto.preco * quant;\n        _valorTotal += valTotal;\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.cardItemMenu,\n          id: produto_id,\n          title: produto.nome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.mdlCard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.info_item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: \"\",\n          src: produto.imagem,\n          className: classes.img_prod,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: classes.nomeItemMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, produto.nome, React.createElement(IconButton, {\n          edge: \"end\",\n          className: classes.menuButton,\n          color: \"primary\",\n          size: \"small\",\n          onClick: function onClick() {\n            return remover(produto_id);\n          },\n          title: \"Clique para remover \".concat(produto.nome, \" do carrinho.\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(DeleteSharpIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }))), React.createElement(\"p\", {\n          className: classes.descItemMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, produto.descricao.length == 0 ? React.createElement(React.Fragment, null, produto.nome) : React.createElement(React.Fragment, null, produto.descricao))), React.createElement(Grid, {\n          container: true,\n          className: classes.mdlCard__actions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: classes.valorUnitario,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, \"R$\", \" \", produto.preco != undefined ? produto.preco.toFixed(2) : null)), quant > 0 && React.createElement(React.Fragment, null, \"Subtotal: R$ \", valTotal.toFixed(2))), React.createElement(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          justify: \"flex-end\",\n          alignItems: \"center\",\n          xs: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            subtract(produto_id, quant);\n          },\n          disabled: quant < 1,\n          className: classes.myButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(RemoveCircleOutlineRoundedIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        })), React.createElement(\"input\", {\n          type: \"number\",\n          onChange: function onChange(ev) {\n            return onChangeQuantidade(ev);\n          },\n          value: quant,\n          className: classes.quantidade,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }), React.createElement(Button, {\n          className: classes.myButton,\n          onClick: function onClick() {\n            add(produto_id, quant);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(AddCircleOutlineIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        })))))));\n      });\n    }\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    variant: \"dense\",\n    style: {\n      padding: 0,\n      paddingLeft: 15,\n      paddingRight: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, React.createElement(ShoppingCartSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, \"MEU CARRINHO\")), React.createElement(IconButton, {\n    edge: \"end\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    className: classes.menuButton,\n    onClick: function onClick() {\n      props.fecharMenu(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(CloseSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, conteudo), React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    variant: \"dense\",\n    style: {\n      padding: 0,\n      paddingLeft: 15,\n      paddingRight: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, \"VALOR TOTAL: R$ \", _valorTotal.toFixed(2))), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    align: \"right\",\n    onClick: function onClick(ev) {\n      return setOpenDialog(true);\n    },\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, \"CONCLUIR PEDIDO\")))))), React.createElement(DialogFormConfirm, {\n    open: openDialog,\n    onClose: function onClose() {\n      setOpenDialog(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }));\n};\n\nexport default Carrinho;","map":null,"metadata":{},"sourceType":"module"}