{"ast":null,"code":"var _jsxFileName = \"D:\\\\node\\\\blog\\\\web\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport tileData from \"../../data.js\";\nimport Link from \"next/link\";\n\nvar useStyles = function useStyles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 868,\n      height: 1050\n    },\n    icon: {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    }\n  };\n};\n\nfunction RecipeReviewCard(props) {\n  var classes = props.classes;\n\n  function onTileTouch(ev) {\n    window.location = \"/post?postId=\" + (ev + 1);\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    className: classes.gridList,\n    cols: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, tileData.map(function (tile, id) {\n    return React.createElement(GridListTile, {\n      onClick: function onClick(e) {\n        onTileTouch(id);\n      },\n      key: id.toString(),\n      rows: 1,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.title,\n      subtitle: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"by: \", tile.author),\n      actionIcon: React.createElement(IconButton, {\n        \"aria-label\": \"info about \".concat(tile.title),\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(InfoIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Link, {\n      href: {\n        pathname: \"/post\",\n        query: {\n          postId: id\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Continue reading...\")));\n  }))));\n}\n\nRecipeReviewCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(useStyles)(RecipeReviewCard);","map":{"version":3,"sources":["D:\\node\\blog\\web\\pages\\index.js"],"names":["React","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","Typography","IconButton","InfoIcon","tileData","Link","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","RecipeReviewCard","props","classes","onTileTouch","ev","window","location","map","tile","id","e","toString","img","title","author","pathname","query","postId","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport tileData from \"../../data.js\";\r\nimport Link from \"next/link\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 868,\r\n    height: 1050\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n});\r\n\r\nfunction RecipeReviewCard(props) {\r\n\r\n  const { classes } = props;\r\n  \r\n  function onTileTouch(ev){\r\n      window.location = \"/post?postId=\" + (ev + 1)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <GridList className={classes.gridList} cols={4}>\r\n          {tileData.map((tile, id) => (\r\n            <GridListTile onClick={ (e) => {\r\n                onTileTouch(id);\r\n              }} key={id.toString()} rows={1} cols={1}>\r\n              <img src={tile.img} alt={tile.title} />\r\n              <GridListTileBar\r\n                title={tile.title}\r\n                subtitle={<span>by: {tile.author}</span>}\r\n                actionIcon={\r\n                  <IconButton\r\n                    aria-label={`info about ${tile.title}`}\r\n                    className={classes.icon}>\r\n                    <InfoIcon />\r\n                  </IconButton>\r\n                }\r\n              >\r\n              </GridListTileBar>\r\n              <Link href={{ pathname: \"/post\", query: { postId: id } }}>\r\n                  <Typography variant=\"subtitle1\" color=\"primary\">\r\n                    Continue reading...\r\n                  </Typography>\r\n                </Link>\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRecipeReviewCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles)(RecipeReviewCard);"]},"metadata":{},"sourceType":"module"}