{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\Categorias\\\\index.js\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useRouter } from \"next/router\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport ApiRest from \"../ApiRest\";\n/**\r\n * Componente categoria\r\n */\n\nfunction Categorias(props) {\n  var _useState = useState({\n    data: null,\n    isLoaded: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      categorias = _useState2[0],\n      setCategorias = _useState2[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    var id = router.query.id;\n\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ApiRest.get(\"/categories/company/\" + id);\n\n              case 2:\n                result = _context.sent;\n                setCategorias({\n                  data: result.data,\n                  isLoaded: true\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(List, {\n    style: {\n      border: \"0px solid red\",\n      padding: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"CATEGORIAS\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    light: true,\n    variant: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), !categorias.isLoaded && React.createElement(React.Fragment, null, [1, 2, 3, 4].map(function (value, index) {\n    return React.createElement(List, {\n      style: {\n        border: \"0px solid red\",\n        padding: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"CATEGORIAS\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  })), categorias.isLoaded && React.createElement(React.Fragment, null, categorias.data.map(function (category, index) {\n    return React.createElement(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(List, {\n      style: {\n        border: \"1px solid red\",\n        padding: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      secondary: React.createElement(Typography, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, category.category_name.toUpperCase())),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, category.amount_products))))), React.createElement(Divider, {\n      light: true,\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  })));\n}\n\nexport default Categorias;","map":{"version":3,"sources":["D:\\node\\delivery\\components\\Categorias\\index.js"],"names":["Divider","List","ListItem","ListItemSecondaryAction","ListItemText","Typography","Skeleton","useRouter","React","Fragment","useEffect","useState","ApiRest","Categorias","props","data","isLoaded","categorias","setCategorias","router","id","query","fetchData","get","result","border","padding","map","value","index","category","category_name","toUpperCase","amount_products"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA;;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,kBACWH,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CADnB;AAAA;AAAA,MAClBC,UADkB;AAAA,MACNC,aADM;;AAEzB,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACAG,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNU,EADM,GACCD,MAAM,CAACE,KADR,CACND,EADM;;AAGd,QAAME,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACKV,OAAO,CAACW,GAAR,CAAY,yBAAyBH,EAArC,CADL;;AAAA;AACVI,gBAAAA,MADU;AAEhBN,gBAAAA,aAAa,CAAC;AAAEH,kBAAAA,IAAI,EAAES,MAAM,CAACT,IAAf;AAAqBC,kBAAAA,QAAQ,EAAE;AAA/B,iBAAD,CAAb;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATM,SAAS;AAAA;AAAA;AAAA,OAAf;;AAIAA,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AAUA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE,eAAV;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQG,CAACT,UAAU,CAACD,QAAZ,IACC,0CACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaW,GAAb,CAAiB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAClC,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEJ,QAAAA,MAAM,EAAE,eAAV;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD,GATA,CADH,CATJ,EAsBGT,UAAU,CAACD,QAAX,IACC,0CACGC,UAAU,CAACF,IAAX,CAAgBY,GAAhB,CAAoB,UAACG,QAAD,EAAWD,KAAX,EAAqB;AACxC,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEJ,QAAAA,MAAM,EAAE,eAAV;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,SAAS,EACP,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAII,QAAQ,CAACC,aAAT,CAAuBC,WAAvB,EAAJ,CADF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,QAAQ,CAACG,eAAb,CADF,CADF,CARF,CADF,CADF,EAiBE,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,OAAO,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAqBD,GAtBA,CADH,CAvBJ,CADF;AAoDD;;AAED,eAAepB,UAAf","sourcesContent":["import Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport ApiRest from \"../ApiRest\";\r\n/**\r\n * Componente categoria\r\n */\r\nfunction Categorias(props) {\r\n  const [categorias, setCategorias] = useState({ data: null, isLoaded: false });\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    const { id } = router.query;\r\n\r\n    const fetchData = async () => {\r\n      const result = await ApiRest.get(\"/categories/company/\" + id);\r\n      setCategorias({ data: result.data, isLoaded: true });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <List style={{ border: \"0px solid red\", padding: \"0\" }}>\r\n        <ListItem>\r\n          <ListItemText primary={<b>CATEGORIAS</b>} />\r\n          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n      <Divider light variant=\"middle\" />\r\n      {!categorias.isLoaded && (\r\n        <>\r\n          {[1, 2, 3, 4].map((value, index) => {\r\n            return (\r\n              <List style={{ border: \"0px solid red\", padding: \"0\" }}>\r\n                <ListItem>\r\n                  <ListItemText primary={<b>CATEGORIAS</b>} />\r\n                  <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                </ListItem>\r\n              </List>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n      {categorias.isLoaded && (\r\n        <>\r\n          {categorias.data.map((category, index) => {\r\n            return (\r\n              <Fragment key={index}>\r\n                <List style={{ border: \"1px solid red\", padding: \"0\" }}>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      secondary={\r\n                        <Typography color=\"secondary\">\r\n                          <b>{category.category_name.toUpperCase()}</b>\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Typography color=\"secondary\">\r\n                        <b>{category.amount_products}</b>\r\n                      </Typography>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                </List>\r\n                <Divider light variant=\"middle\" />\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categorias;\r\n"]},"metadata":{},"sourceType":"module"}