{"ast":null,"code":"//https://www.robinwieruch.de/react-function-component/\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Menu, Search, ShoppingCartOutlined } from \"@material-ui/icons\";\nimport { useRouter } from \"next/router\";\nimport { green } from \"@material-ui/core/colors\";\nimport Footers from \"../../components/footer\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Chip from \"@material-ui/core/Chip\"; // function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <Typography\n//       component=\"div\"\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`simple-tabpanel-${index}`}\n//       aria-labelledby={`simple-tab-${index}`}\n//       {...other}\n//     >\n//       <Box p={3}>{children}</Box>\n//     </Typography>\n//   );\n// }\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired\n// };\n// function a11yProps(index) {\n//   return {\n//     id: `simple-tab-${index}`,\n//     \"aria-controls\": `simple-tabpanel-${index}`\n//   };\n// }\n// function MadeWithLove(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Criado por \"}\n//       <Link color=\"inherit\" href=\"#\">\n//         {props.config.empresa}\n//       </Link>\n//     </Typography>\n//   );\n// }\n// const useStyles = makeStyles(theme => ({\n//   \"@global\": {\n//     body: {\n//       background:\n//         \"url(https://res.cloudinary.com/delivery-com/image/fetch/https%3A%2F%2Fs3.amazonaws.com%2Fs3.delivery.com%2FHomepage%2Fdefault-small.jpg)\",\n//       backgroundAttachment: \"fixed\",\n//       backgroundPosition: \"center\",\n//       backgroundRepeat: \"no-repeat\",\n//       backgroundSize: \"cover\"\n//     },\n//     ul: {\n//       margin: 0,\n//       padding: 0\n//     },\n//     li: {\n//       listStyle: \"none\"\n//     }\n//   },\n//   appBar: {\n//     borderBottom: `1px solid ${theme.palette.divider}`\n//   },\n//   toolbar: {\n//     flexWrap: \"wrap\"\n//   },\n//   toolbarTitle: {\n//     flexGrow: 1\n//   },\n//   link: {\n//     margin: theme.spacing(1, 1.5)\n//   },\n//   heroContent: {\n//     padding: theme.spacing(0, 0, 0)\n//   },\n//   cardHeader: {\n//     backgroundColor: theme.palette.grey[200]\n//   },\n//   cardPricing: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"baseline\",\n//     marginBottom: theme.spacing(2)\n//   },\n//   footer: {\n//     borderTop: `1px solid ${theme.palette.divider}`,\n//     marginTop: theme.spacing(8),\n//     paddingTop: theme.spacing(3),\n//     paddingBottom: theme.spacing(3),\n//     [theme.breakpoints.up(\"sm\")]: {\n//       paddingTop: theme.spacing(6),\n//       paddingBottom: theme.spacing(6)\n//     }\n//   },\n//   cardGrid: {\n//     paddingTop: theme.spacing(8),\n//     paddingBottom: theme.spacing(8)\n//   },\n//   card: {\n//     height: \"100%\",\n//     display: \"flex\",\n//     flexDirection: \"column\"\n//   },\n//   cardMedia: {\n//     paddingTop: \"56.25%\" // 16:9\n//   },\n//   cardMediaList: {\n//     paddingTop: \"56.25%\", // 16:9\n//     marginRight: \"20px\"\n//   },\n//   cardContent: {\n//     flexGrow: 1\n//   },\n//   rootinput: {\n//     borderRadius: 40,\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     width: \"80%\",\n//     margin: \"0px auto\",\n//     paddingLeft: 10,\n//     paddingRight: 10,\n//     paddingTop: 5,\n//     paddingBottom: 5\n//   },\n//   textFieldInput: {\n//     backgroundColor: theme.palette.common.white,\n//     fontSize: 16,\n//     padding: \"10px 12px\",\n//     width: \"calc(100% - 24px)\",\n//     transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n//     \"&:focus\": {\n//       borderColor: \"#80bdff\",\n//       boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n//     }\n//   },\n//   input: {\n//     marginLeft: 8,\n//     flex: 1,\n//     borderRadius: 15,\n//     padding: 15\n//   },\n//   iconButton: {\n//     padding: 10\n//   },\n//   divider: {\n//     width: 1,\n//     height: 28,\n//     margin: 4\n//   },\n//   tabContent: {\n//     backgroundColor: theme.palette.background.paper,\n//     width: \"100%\",\n//     position: \"relative\",\n//     minHeight: 600\n//   },\n//   fab: {\n//     position: \"absolute\",\n//     bottom: theme.spacing(2),\n//     right: theme.spacing(2)\n//   },\n//   fabGreen: {\n//     color: theme.palette.common.white,\n//     backgroundColor: green[500],\n//     \"&:hover\": {\n//       backgroundColor: green[600]\n//     }\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1)\n//   },\n//   icon: {\n//     margin: theme.spacing(2)\n//   },\n//   details: {\n//     display: \"flex\",\n//     flexDirection: \"column\"\n//   },\n//   content: {\n//     flex: \"1 0 auto\"\n//   },\n//   cover: {\n//     width: 151\n//   },\n//   controls: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     paddingLeft: theme.spacing(1),\n//     paddingBottom: theme.spacing(1)\n//   },\n//   playIcon: {\n//     height: 38,\n//     width: 38\n//   },\n//   listaProdutos: {\n//     boxShadow:\n//       \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12);\",\n//     display: \"flex\",\n//     flexWrap: \"nowrap\",\n//     border: \"0px solid red\",\n//     flexDirection: \"row\",\n//     height: 160,\n//     marginTop: 10,\n//     backgroundColor: \"rgba(245,245,245,0.8)\"\n//   },\n//   itemAvatar: {\n//     width: \"20%\",\n//     display: \"flex\",\n//     flexWrap: \"nowrap\",\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     border: \"0px solid lime\",\n//     padding: 4\n//   },\n//   itemAvatarImg: {\n//     width: \"100%\",\n//     height: \"100%\",\n//     display: \"flex\",\n//     flexWrap: \"nowrap\",\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     border: \"0px solid lime\"\n//   },\n//   itemContent: {\n//     width: \"60%\",\n//     display: \"flex\",\n//     flexWrap: \"nowrap\",\n//     flexDirection: \"column\",\n//     justifyContent: \"flex-start\",\n//     alignContent: \"flex-start\",\n//     alignItems: \"flex-start\",\n//     border: \"0px solid lime\",\n//     padding: 10\n//   },\n//   itemAcoes: {\n//     width: \"20%\",\n//     display: \"flex\",\n//     flexWrap: \"nowrap\",\n//     flexDirection: \"column\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     border: \"0px solid lime\",\n//     padding: 10,\n//     textAlign: \"center\"\n//   },\n//   inputQuantidade: {\n//     border: 0,\n//     outline: 0,\n//     textAlign: \"center\",\n//     width: 40\n//   }\n// }));\n// /**\n//  * Component: Produtos\n//  */\n// function Produto(props) {\n//   const [quantidade, setQuantidade] = useState(0);\n//   const [valorTotal, setValorTotal] = useState(0);\n//   const [descricao, setDescricao] = useState(\"\");\n//   const [observacao, setObservacao] = useState(\"\");\n//   function removeProduct(id) {\n//     let storageProducts = JSON.parse(localStorage.getItem(\"products\"));\n//     let products = storageProducts.filter(product => product.id !== id);\n//     localStorage.setItem(\"products\", JSON.stringify(products));\n//   }\n//   function addProduct() {\n//     let products = [];\n//     if (localStorage.getItem(\"products\")) {\n//       products = JSON.parse(localStorage.getItem(\"products\"));\n//     }\n//     //Desestruturação Javascript\n//     const { id } = props;\n//     //Pega o index\n//     let objIndex = products.findIndex(pedido => pedido.productId === id);\n//     //Caso não exista\n//     if (objIndex === -1) {\n//       products.push({\n//         productId: id,\n//         quantidade: quantidade + 1,\n//         observacao: observacao\n//       });\n//       localStorage.setItem(\"products\", JSON.stringify(products));\n//     } else {\n//       products[objIndex].productId = id;\n//       products[objIndex].quantidade = quantidade + 1;\n//       products[objIndex].observacao = observacao;\n//       localStorage.setItem(\"products\", JSON.stringify(products));\n//     }\n//   }\n//   function add() {\n//     let quant = parseInt(quantidade) + 1;\n//     setQuantidade(quant);\n//     //props.handleTotal(props.precoUnitario);\n//     addProduct();\n//     setValorTotal(quant);\n//   }\n//   function subtract() {\n//     let quant = parseInt(quantidade) - 1;\n//     setQuantidade(quant);\n//     addProduct();\n//     //props.handleTotal(-props.precoUnitario);\n//     setValorTotal(props.precoUnitario * quant);\n//   }\n//   function onChangeQuantidade(ev) {\n//     let quant = parseInt(ev.target.value);\n//     setQuantidade(quant);\n//     //props.handleTotal(props.precoUnitario);\n//     addProduct();\n//     setValorTotal(props.precoUnitario * parseInt(quant));\n//   }\n//   function alterarTextoTextArea(ev) {\n//     setObservacao(ev.target.value);\n//   }\n//   const classes = useStyles();\n//   return (\n//     <div className={classes.root} id={props.id}>\n//       <Grid container spacing={2}>\n//         <Grid item xs={12} md={12}>\n//           <div className={classes.demo}>\n//             <div\n//               className={classes.listaProdutos}\n//               title={\"Clique para entrar em \" + props.nome}\n//             >\n//               <div className={classes.itemAvatar}>\n//                 <img\n//                   className={classes.itemAvatarImg}\n//                   alt=\"\"\n//                   src={props.imagem}\n//                 />\n//               </div>\n//               <div className={classes.itemContent}>\n//                 <Typography>\n//                   <b>{props.nome}</b>\n//                 </Typography>\n//                 <Typography>\n//                   <span>{props.descricao}</span>\n//                 </Typography>\n//                 <sub>\n//                   <strong>Kg</strong>\n//                 </sub>\n//                 <FormControl>\n//                   <InputLabel htmlFor=\"my-input\">Observação:</InputLabel>\n//                   <Input\n//                     id=\"my-input\"\n//                     onChange={ev => {\n//                       alterarTextoTextArea(ev);\n//                     }}\n//                     value={observacao}\n//                     aria-describedby=\"my-helper-text\"\n//                   />\n//                 </FormControl>\n//               </div>\n//               <div className={classes.itemAcoes}>\n//                 <br />\n//                 <Typography>\n//                   Preço <br /> <b>R$ {props.precoUnitario}</b>\n//                 </Typography>\n//                 <small>Quantidade:</small>\n//                 <ButtonGroup\n//                   variant=\"contained\"\n//                   color=\"primary\"\n//                   aria-label=\"Split button\"\n//                 >\n//                   <Button onClick={subtract} disabled={quantidade < 1}>\n//                     -\n//                   </Button>\n//                   <input\n//                     type=\"number\"\n//                     onChange={ev => onChangeQuantidade(ev)}\n//                     value={quantidade}\n//                     className={classes.inputQuantidade}\n//                   />\n//                   <Button\n//                     color=\"primary\"\n//                     variant=\"contained\"\n//                     size=\"small\"\n//                     aria-haspopup=\"true\"\n//                     value=\"+\"\n//                     onClick={add}\n//                   >\n//                     +\n//                   </Button>\n//                 </ButtonGroup>\n//                 <br />\n//                 <Chip\n//                   className={classes.chip}\n//                   color=\"primary\"\n//                   label={`Valor a pagar${\"\\n\\n\"}R$ ${valorTotal}`}\n//                 />\n//                 <br />\n//               </div>\n//             </div>\n//           </div>\n//         </Grid>\n//       </Grid>\n//     </div>\n//   );\n// }\n// const Index = props => {\n//   const router = useRouter();\n//   const [value, setValue] = React.useState(0);\n//   const classes = useStyles();\n//   function handleChange(event, newValue) {\n//     setValue(newValue);\n//   }\n//   return (\n//     <React.Fragment>\n//       <CssBaseline />\n//       {/* MENU DE BARRA SUPERIOR */}\n//       <AppBar\n//         position=\"fixed\"\n//         color=\"default\"\n//         elevation={0}\n//         className={classes.appBar}\n//       >\n//         <Toolbar className={classes.toolbar}>\n//           <Typography\n//             variant=\"h6\"\n//             color=\"inherit\"\n//             noWrap\n//             className={classes.toolbarTitle}\n//           >\n//             <Link href=\"../\">Delivery {router.query.id}</Link>\n//           </Typography>\n//           <Button\n//             href=\"#\"\n//             color=\"primary\"\n//             variant=\"outlined\"\n//             className={classes.link}\n//           >\n//             Sair\n//           </Button>\n//           <IconButton\n//             aria-label=\"Account of current user\"\n//             aria-controls=\"menu-appbar\"\n//             aria-haspopup=\"true\"\n//             color=\"inherit\"\n//           >\n//             <ShoppingCartOutlined />\n//           </IconButton>\n//         </Toolbar>\n//       </AppBar>\n//       <Container className={classes.cardGrid} maxWidth=\"md\">\n//         <br />\n//         {/* INÍCIO DO TAB CONTENT */}\n//         <AppBar position=\"static\">\n//           <Tabs\n//             value={value}\n//             onChange={handleChange}\n//             aria-label=\"Simple tabs example\"\n//           >\n//             <Tab label=\"PRODUTOS\" {...a11yProps(0)} />\n//             <Tab label=\"SEUS PEDIDOS\" {...a11yProps(1)} />\n//             <Tab label=\"AVALIAÇÕES\" {...a11yProps(2)} />\n//           </Tabs>\n//         </AppBar>\n//         {/* TAB 1 */}\n//         <TabPanel value={value} index={0}>\n//           <Container\n//             maxWidth=\"sm\"\n//             component=\"main\"\n//             className={classes.heroContent}\n//           >\n//             {/* INPUT */}\n//             <Paper className={classes.rootinput}>\n//               <IconButton className={classes.iconButton} aria-label=\"Menu\">\n//                 <Menu />\n//               </IconButton>\n//               <InputBase\n//                 className={classes.textFieldInput}\n//                 placeholder={`Pesquise produtos aqui...`}\n//                 inputProps={{ \"aria-label\": \"Search Google Maps\" }}\n//               />\n//               <Divider className={classes.divider} />\n//               <IconButton className={classes.iconButton} aria-label=\"Search\">\n//                 <Search />\n//               </IconButton>\n//             </Paper>\n//             <Typography\n//               variant=\"h5\"\n//               align=\"center\"\n//               color=\"textSecondary\"\n//               component=\"p\"\n//             >\n//               <br />\n//             </Typography>\n//           </Container>\n//           {Object.values(props.shows).map((product, _key) => {\n//             if (product.id != undefined) {\n//               return (\n//                 <React.Fragment key={_key}>\n//                   <Produto\n//                     id={product.id}\n//                     nome={product.nome.toUpperCase()}\n//                     imagem={product.imagem}\n//                     precoUnitario={product.preco}\n//                     descricao={product.descricao}\n//                   />\n//                 </React.Fragment>\n//               );\n//             }\n//             /**/\n//           })}\n//         </TabPanel>\n//         {/* TAB 2 */}\n//         <TabPanel value={value} index={1}>\n//           <Typography>Tab 2</Typography>\n//         </TabPanel>\n//         {/* TAB 3 */}\n//         <TabPanel value={value} index={2}>\n//           Tab 3\n//         </TabPanel>\n//       </Container>\n//       {/* Footer */}\n//       <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n//         <Grid container spacing={4} justify=\"space-evenly\">\n//           {Footers.map(footer => (\n//             <Grid item xs={6} sm={3} key={footer.title}>\n//               <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n//                 {footer.title}\n//               </Typography>\n//               <ul>\n//                 {footer.description.map(item => (\n//                   <li key={item}>\n//                     <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n//                       {item}\n//                     </Link>\n//                   </li>\n//                 ))}\n//               </ul>\n//             </Grid>\n//           ))}\n//         </Grid>\n//         <Box mt={5}>{MadeWithLove(props)}</Box>\n//       </Container>\n//       {/* End footer */}\n//     </React.Fragment>\n//   );\n// };\n// Index.getInitialProps = async function(ctx) {\n//   const res = await import(\"../../db/produtos.json\");\n//   const configSite = await import(\"../../db/config.dev.json\");\n//   return {\n//     shows: res,\n//     config: configSite\n//   };\n// };\n\nvar Index = function Index() {\n  return React.createElement(React.Fragment, null, \"Taffarel\");\n};\n\nexport default Index;","map":{"version":3,"sources":["E:\\delivery-rsvtelecom-com-br\\pages\\p\\[id].js"],"names":["React","useState","PropTypes","AppBar","Button","Card","CardContent","CardMedia","CssBaseline","Grid","Toolbar","Typography","Link","makeStyles","Container","Box","Paper","InputBase","Divider","IconButton","Tabs","Tab","Menu","Search","ShoppingCartOutlined","useRouter","green","Footers","FormControl","Input","InputLabel","SkipPreviousIcon","PlayArrowIcon","SkipNextIcon","ButtonGroup","Chip","Index"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,oBAAvB,QAAmD,oBAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZ,qDADY;AAAA,CAAd;;AAMA,eAAeA,KAAf","sourcesContent":["//https://www.robinwieruch.de/react-function-component/\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Menu, Search, ShoppingCartOutlined } from \"@material-ui/icons\";\r\nimport { useRouter } from \"next/router\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Footers from \"../../components/footer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\n// function TabPanel(props) {\r\n//   const { children, value, index, ...other } = props;\r\n\r\n//   return (\r\n//     <Typography\r\n//       component=\"div\"\r\n//       role=\"tabpanel\"\r\n//       hidden={value !== index}\r\n//       id={`simple-tabpanel-${index}`}\r\n//       aria-labelledby={`simple-tab-${index}`}\r\n//       {...other}\r\n//     >\r\n//       <Box p={3}>{children}</Box>\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n// TabPanel.propTypes = {\r\n//   children: PropTypes.node,\r\n//   index: PropTypes.any.isRequired,\r\n//   value: PropTypes.any.isRequired\r\n// };\r\n\r\n// function a11yProps(index) {\r\n//   return {\r\n//     id: `simple-tab-${index}`,\r\n//     \"aria-controls\": `simple-tabpanel-${index}`\r\n//   };\r\n// }\r\n\r\n// function MadeWithLove(props) {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {\"Criado por \"}\r\n//       <Link color=\"inherit\" href=\"#\">\r\n//         {props.config.empresa}\r\n//       </Link>\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   \"@global\": {\r\n//     body: {\r\n//       background:\r\n//         \"url(https://res.cloudinary.com/delivery-com/image/fetch/https%3A%2F%2Fs3.amazonaws.com%2Fs3.delivery.com%2FHomepage%2Fdefault-small.jpg)\",\r\n//       backgroundAttachment: \"fixed\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundSize: \"cover\"\r\n//     },\r\n//     ul: {\r\n//       margin: 0,\r\n//       padding: 0\r\n//     },\r\n//     li: {\r\n//       listStyle: \"none\"\r\n//     }\r\n//   },\r\n//   appBar: {\r\n//     borderBottom: `1px solid ${theme.palette.divider}`\r\n//   },\r\n//   toolbar: {\r\n//     flexWrap: \"wrap\"\r\n//   },\r\n//   toolbarTitle: {\r\n//     flexGrow: 1\r\n//   },\r\n//   link: {\r\n//     margin: theme.spacing(1, 1.5)\r\n//   },\r\n//   heroContent: {\r\n//     padding: theme.spacing(0, 0, 0)\r\n//   },\r\n//   cardHeader: {\r\n//     backgroundColor: theme.palette.grey[200]\r\n//   },\r\n//   cardPricing: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"baseline\",\r\n//     marginBottom: theme.spacing(2)\r\n//   },\r\n//   footer: {\r\n//     borderTop: `1px solid ${theme.palette.divider}`,\r\n//     marginTop: theme.spacing(8),\r\n//     paddingTop: theme.spacing(3),\r\n//     paddingBottom: theme.spacing(3),\r\n//     [theme.breakpoints.up(\"sm\")]: {\r\n//       paddingTop: theme.spacing(6),\r\n//       paddingBottom: theme.spacing(6)\r\n//     }\r\n//   },\r\n//   cardGrid: {\r\n//     paddingTop: theme.spacing(8),\r\n//     paddingBottom: theme.spacing(8)\r\n//   },\r\n//   card: {\r\n//     height: \"100%\",\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\"\r\n//   },\r\n//   cardMedia: {\r\n//     paddingTop: \"56.25%\" // 16:9\r\n//   },\r\n//   cardMediaList: {\r\n//     paddingTop: \"56.25%\", // 16:9\r\n//     marginRight: \"20px\"\r\n//   },\r\n//   cardContent: {\r\n//     flexGrow: 1\r\n//   },\r\n//   rootinput: {\r\n//     borderRadius: 40,\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     width: \"80%\",\r\n//     margin: \"0px auto\",\r\n//     paddingLeft: 10,\r\n//     paddingRight: 10,\r\n//     paddingTop: 5,\r\n//     paddingBottom: 5\r\n//   },\r\n//   textFieldInput: {\r\n//     backgroundColor: theme.palette.common.white,\r\n//     fontSize: 16,\r\n//     padding: \"10px 12px\",\r\n//     width: \"calc(100% - 24px)\",\r\n//     transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n//     \"&:focus\": {\r\n//       borderColor: \"#80bdff\",\r\n//       boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n//     }\r\n//   },\r\n//   input: {\r\n//     marginLeft: 8,\r\n//     flex: 1,\r\n//     borderRadius: 15,\r\n//     padding: 15\r\n//   },\r\n//   iconButton: {\r\n//     padding: 10\r\n//   },\r\n//   divider: {\r\n//     width: 1,\r\n//     height: 28,\r\n//     margin: 4\r\n//   },\r\n//   tabContent: {\r\n//     backgroundColor: theme.palette.background.paper,\r\n//     width: \"100%\",\r\n//     position: \"relative\",\r\n//     minHeight: 600\r\n//   },\r\n//   fab: {\r\n//     position: \"absolute\",\r\n//     bottom: theme.spacing(2),\r\n//     right: theme.spacing(2)\r\n//   },\r\n//   fabGreen: {\r\n//     color: theme.palette.common.white,\r\n//     backgroundColor: green[500],\r\n//     \"&:hover\": {\r\n//       backgroundColor: green[600]\r\n//     }\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1)\r\n//   },\r\n//   icon: {\r\n//     margin: theme.spacing(2)\r\n//   },\r\n//   details: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\"\r\n//   },\r\n//   content: {\r\n//     flex: \"1 0 auto\"\r\n//   },\r\n//   cover: {\r\n//     width: 151\r\n//   },\r\n//   controls: {\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     paddingLeft: theme.spacing(1),\r\n//     paddingBottom: theme.spacing(1)\r\n//   },\r\n//   playIcon: {\r\n//     height: 38,\r\n//     width: 38\r\n//   },\r\n//   listaProdutos: {\r\n//     boxShadow:\r\n//       \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12);\",\r\n//     display: \"flex\",\r\n//     flexWrap: \"nowrap\",\r\n//     border: \"0px solid red\",\r\n//     flexDirection: \"row\",\r\n//     height: 160,\r\n//     marginTop: 10,\r\n//     backgroundColor: \"rgba(245,245,245,0.8)\"\r\n//   },\r\n//   itemAvatar: {\r\n//     width: \"20%\",\r\n//     display: \"flex\",\r\n//     flexWrap: \"nowrap\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     border: \"0px solid lime\",\r\n//     padding: 4\r\n//   },\r\n//   itemAvatarImg: {\r\n//     width: \"100%\",\r\n//     height: \"100%\",\r\n//     display: \"flex\",\r\n//     flexWrap: \"nowrap\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     border: \"0px solid lime\"\r\n//   },\r\n//   itemContent: {\r\n//     width: \"60%\",\r\n//     display: \"flex\",\r\n//     flexWrap: \"nowrap\",\r\n//     flexDirection: \"column\",\r\n//     justifyContent: \"flex-start\",\r\n//     alignContent: \"flex-start\",\r\n//     alignItems: \"flex-start\",\r\n//     border: \"0px solid lime\",\r\n//     padding: 10\r\n//   },\r\n//   itemAcoes: {\r\n//     width: \"20%\",\r\n//     display: \"flex\",\r\n//     flexWrap: \"nowrap\",\r\n//     flexDirection: \"column\",\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     border: \"0px solid lime\",\r\n//     padding: 10,\r\n//     textAlign: \"center\"\r\n//   },\r\n//   inputQuantidade: {\r\n//     border: 0,\r\n//     outline: 0,\r\n//     textAlign: \"center\",\r\n//     width: 40\r\n//   }\r\n// }));\r\n\r\n// /**\r\n//  * Component: Produtos\r\n//  */\r\n// function Produto(props) {\r\n//   const [quantidade, setQuantidade] = useState(0);\r\n//   const [valorTotal, setValorTotal] = useState(0);\r\n//   const [descricao, setDescricao] = useState(\"\");\r\n//   const [observacao, setObservacao] = useState(\"\");\r\n\r\n//   function removeProduct(id) {\r\n//     let storageProducts = JSON.parse(localStorage.getItem(\"products\"));\r\n//     let products = storageProducts.filter(product => product.id !== id);\r\n//     localStorage.setItem(\"products\", JSON.stringify(products));\r\n//   }\r\n\r\n//   function addProduct() {\r\n//     let products = [];\r\n\r\n//     if (localStorage.getItem(\"products\")) {\r\n//       products = JSON.parse(localStorage.getItem(\"products\"));\r\n//     }\r\n\r\n//     //Desestruturação Javascript\r\n//     const { id } = props;\r\n\r\n//     //Pega o index\r\n//     let objIndex = products.findIndex(pedido => pedido.productId === id);\r\n\r\n//     //Caso não exista\r\n//     if (objIndex === -1) {\r\n//       products.push({\r\n//         productId: id,\r\n//         quantidade: quantidade + 1,\r\n//         observacao: observacao\r\n//       });\r\n\r\n//       localStorage.setItem(\"products\", JSON.stringify(products));\r\n//     } else {\r\n//       products[objIndex].productId = id;\r\n//       products[objIndex].quantidade = quantidade + 1;\r\n//       products[objIndex].observacao = observacao;\r\n\r\n//       localStorage.setItem(\"products\", JSON.stringify(products));\r\n//     }\r\n//   }\r\n\r\n//   function add() {\r\n//     let quant = parseInt(quantidade) + 1;\r\n    \r\n//     setQuantidade(quant);\r\n\r\n//     //props.handleTotal(props.precoUnitario);\r\n\r\n//     addProduct();\r\n\r\n//     setValorTotal(quant);\r\n//   }\r\n\r\n//   function subtract() {\r\n//     let quant = parseInt(quantidade) - 1;\r\n\r\n//     setQuantidade(quant);\r\n\r\n//     addProduct();\r\n\r\n//     //props.handleTotal(-props.precoUnitario);\r\n\r\n//     setValorTotal(props.precoUnitario * quant);\r\n//   }\r\n\r\n//   function onChangeQuantidade(ev) {\r\n//     let quant = parseInt(ev.target.value);\r\n\r\n//     setQuantidade(quant);\r\n\r\n//     //props.handleTotal(props.precoUnitario);\r\n\r\n//     addProduct();\r\n\r\n//     setValorTotal(props.precoUnitario * parseInt(quant));\r\n//   }\r\n\r\n//   function alterarTextoTextArea(ev) {\r\n//     setObservacao(ev.target.value);\r\n//   }\r\n\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.root} id={props.id}>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} md={12}>\r\n//           <div className={classes.demo}>\r\n//             <div\r\n//               className={classes.listaProdutos}\r\n//               title={\"Clique para entrar em \" + props.nome}\r\n//             >\r\n//               <div className={classes.itemAvatar}>\r\n//                 <img\r\n//                   className={classes.itemAvatarImg}\r\n//                   alt=\"\"\r\n//                   src={props.imagem}\r\n//                 />\r\n//               </div>\r\n//               <div className={classes.itemContent}>\r\n//                 <Typography>\r\n//                   <b>{props.nome}</b>\r\n//                 </Typography>\r\n//                 <Typography>\r\n//                   <span>{props.descricao}</span>\r\n//                 </Typography>\r\n//                 <sub>\r\n//                   <strong>Kg</strong>\r\n//                 </sub>\r\n//                 <FormControl>\r\n//                   <InputLabel htmlFor=\"my-input\">Observação:</InputLabel>\r\n//                   <Input\r\n//                     id=\"my-input\"\r\n//                     onChange={ev => {\r\n//                       alterarTextoTextArea(ev);\r\n//                     }}\r\n//                     value={observacao}\r\n//                     aria-describedby=\"my-helper-text\"\r\n//                   />\r\n//                 </FormControl>\r\n//               </div>\r\n//               <div className={classes.itemAcoes}>\r\n//                 <br />\r\n//                 <Typography>\r\n//                   Preço <br /> <b>R$ {props.precoUnitario}</b>\r\n//                 </Typography>\r\n//                 <small>Quantidade:</small>\r\n//                 <ButtonGroup\r\n//                   variant=\"contained\"\r\n//                   color=\"primary\"\r\n//                   aria-label=\"Split button\"\r\n//                 >\r\n//                   <Button onClick={subtract} disabled={quantidade < 1}>\r\n//                     -\r\n//                   </Button>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     onChange={ev => onChangeQuantidade(ev)}\r\n//                     value={quantidade}\r\n//                     className={classes.inputQuantidade}\r\n//                   />\r\n//                   <Button\r\n//                     color=\"primary\"\r\n//                     variant=\"contained\"\r\n//                     size=\"small\"\r\n//                     aria-haspopup=\"true\"\r\n//                     value=\"+\"\r\n//                     onClick={add}\r\n//                   >\r\n//                     +\r\n//                   </Button>\r\n//                 </ButtonGroup>\r\n//                 <br />\r\n//                 <Chip\r\n//                   className={classes.chip}\r\n//                   color=\"primary\"\r\n//                   label={`Valor a pagar${\"\\n\\n\"}R$ ${valorTotal}`}\r\n//                 />\r\n//                 <br />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const Index = props => {\r\n//   const router = useRouter();\r\n\r\n//   const [value, setValue] = React.useState(0);\r\n\r\n//   const classes = useStyles();\r\n\r\n//   function handleChange(event, newValue) {\r\n//     setValue(newValue);\r\n//   }\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <CssBaseline />\r\n//       {/* MENU DE BARRA SUPERIOR */}\r\n//       <AppBar\r\n//         position=\"fixed\"\r\n//         color=\"default\"\r\n//         elevation={0}\r\n//         className={classes.appBar}\r\n//       >\r\n//         <Toolbar className={classes.toolbar}>\r\n//           <Typography\r\n//             variant=\"h6\"\r\n//             color=\"inherit\"\r\n//             noWrap\r\n//             className={classes.toolbarTitle}\r\n//           >\r\n//             <Link href=\"../\">Delivery {router.query.id}</Link>\r\n//           </Typography>\r\n//           <Button\r\n//             href=\"#\"\r\n//             color=\"primary\"\r\n//             variant=\"outlined\"\r\n//             className={classes.link}\r\n//           >\r\n//             Sair\r\n//           </Button>\r\n//           <IconButton\r\n//             aria-label=\"Account of current user\"\r\n//             aria-controls=\"menu-appbar\"\r\n//             aria-haspopup=\"true\"\r\n//             color=\"inherit\"\r\n//           >\r\n//             <ShoppingCartOutlined />\r\n//           </IconButton>\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//       <Container className={classes.cardGrid} maxWidth=\"md\">\r\n//         <br />\r\n//         {/* INÍCIO DO TAB CONTENT */}\r\n//         <AppBar position=\"static\">\r\n//           <Tabs\r\n//             value={value}\r\n//             onChange={handleChange}\r\n//             aria-label=\"Simple tabs example\"\r\n//           >\r\n//             <Tab label=\"PRODUTOS\" {...a11yProps(0)} />\r\n//             <Tab label=\"SEUS PEDIDOS\" {...a11yProps(1)} />\r\n//             <Tab label=\"AVALIAÇÕES\" {...a11yProps(2)} />\r\n//           </Tabs>\r\n//         </AppBar>\r\n//         {/* TAB 1 */}\r\n//         <TabPanel value={value} index={0}>\r\n//           <Container\r\n//             maxWidth=\"sm\"\r\n//             component=\"main\"\r\n//             className={classes.heroContent}\r\n//           >\r\n//             {/* INPUT */}\r\n//             <Paper className={classes.rootinput}>\r\n//               <IconButton className={classes.iconButton} aria-label=\"Menu\">\r\n//                 <Menu />\r\n//               </IconButton>\r\n//               <InputBase\r\n//                 className={classes.textFieldInput}\r\n//                 placeholder={`Pesquise produtos aqui...`}\r\n//                 inputProps={{ \"aria-label\": \"Search Google Maps\" }}\r\n//               />\r\n//               <Divider className={classes.divider} />\r\n//               <IconButton className={classes.iconButton} aria-label=\"Search\">\r\n//                 <Search />\r\n//               </IconButton>\r\n//             </Paper>\r\n//             <Typography\r\n//               variant=\"h5\"\r\n//               align=\"center\"\r\n//               color=\"textSecondary\"\r\n//               component=\"p\"\r\n//             >\r\n//               <br />\r\n//             </Typography>\r\n//           </Container>\r\n//           {Object.values(props.shows).map((product, _key) => {\r\n//             if (product.id != undefined) {\r\n//               return (\r\n//                 <React.Fragment key={_key}>\r\n//                   <Produto\r\n//                     id={product.id}\r\n//                     nome={product.nome.toUpperCase()}\r\n//                     imagem={product.imagem}\r\n//                     precoUnitario={product.preco}\r\n//                     descricao={product.descricao}\r\n//                   />\r\n//                 </React.Fragment>\r\n//               );\r\n//             }\r\n//             /**/\r\n//           })}\r\n//         </TabPanel>\r\n//         {/* TAB 2 */}\r\n//         <TabPanel value={value} index={1}>\r\n//           <Typography>Tab 2</Typography>\r\n//         </TabPanel>\r\n//         {/* TAB 3 */}\r\n//         <TabPanel value={value} index={2}>\r\n//           Tab 3\r\n//         </TabPanel>\r\n//       </Container>\r\n//       {/* Footer */}\r\n//       <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n//         <Grid container spacing={4} justify=\"space-evenly\">\r\n//           {Footers.map(footer => (\r\n//             <Grid item xs={6} sm={3} key={footer.title}>\r\n//               <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n//                 {footer.title}\r\n//               </Typography>\r\n//               <ul>\r\n//                 {footer.description.map(item => (\r\n//                   <li key={item}>\r\n//                     <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\r\n//                       {item}\r\n//                     </Link>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </Grid>\r\n//           ))}\r\n//         </Grid>\r\n//         <Box mt={5}>{MadeWithLove(props)}</Box>\r\n//       </Container>\r\n//       {/* End footer */}\r\n//     </React.Fragment>\r\n//   );\r\n// };\r\n\r\n// Index.getInitialProps = async function(ctx) {\r\n//   const res = await import(\"../../db/produtos.json\");\r\n//   const configSite = await import(\"../../db/config.dev.json\");\r\n\r\n//   return {\r\n//     shows: res,\r\n//     config: configSite\r\n//   };\r\n// };\r\n\r\n\r\nconst Index = () =>(\r\n  <>\r\n    Taffarel\r\n  </>\r\n)\r\n\r\nexport default Index;\r\n\r\n"]},"metadata":{},"sourceType":"module"}