{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/*\r\nUma classe para trabalhar com LocalStorage\r\n*/\nvar LocalStorageHandler =\n/*#__PURE__*/\nfunction () {\n  function LocalStorageHandler() {\n    _classCallCheck(this, LocalStorageHandler);\n  } //static _ls = localStorage;\n\n  /**\r\n   * @method get\r\n   * @param key {String} Item key\r\n   * @return {String|Object|Null}\r\n   */\n\n\n  _createClass(LocalStorageHandler, null, [{\n    key: \"get\",\n    value: function get(key) {\n      try {\n        return JSON.parse(this._ls.getItem(key));\n      } catch (e) {\n        return this._ls.getItem(key);\n      }\n    }\n    /**\r\n     * @method set\r\n     * @param key {String} Item key\r\n     * @param val {String|Object} Item value\r\n     * @return {String|Object} The value of the item just set\r\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, val) {\n      this._ls.setItem(key, _JSON$stringify(val));\n\n      return this.get(key);\n    }\n    /**\r\n     * @method key\r\n     * @param index {Number} Item index\r\n     * @return {String|Null} The item key if found, null if not\r\n     */\n\n  }, {\n    key: \"key\",\n    value: function key(index) {\n      if (typeof index === 'number') {\n        return this._ls.key(index);\n      }\n    }\n    /**\r\n     * @method data\r\n     * @return {Array|Null} An array containing all items in localStorage through key{string}-value{String|Object} pairs\r\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      var i = 0;\n      var data = [];\n\n      while (this._ls.key(i)) {\n        data[i] = [this._ls.key(i), this.get(this._ls.key(i))];\n        i++;\n      }\n\n      return data.length ? data : null;\n    }\n  }, {\n    key: \"getDataByKey\",\n    value: function getDataByKey(key) {\n      try {\n        this._key = key;\n        var data = localStorage.getItem(key);\n\n        if (data === null) {\n          return 0;\n        }\n\n        return JSON.parse(data);\n      } catch (e) {\n        return e;\n      }\n    }\n  }, {\n    key: \"count\",\n    value: function count(key) {\n      try {\n        var data = localStorage.getItem(key);\n\n        if (data === null) {\n          return 0;\n        }\n\n        return _parseInt(JSON.parse(data).length);\n      } catch (e) {\n        return e;\n      }\n    }\n    /**\r\n     * @method remove\r\n     * @param keyOrIndex {String|Number} Item key or index (which will be converted to key anyway)\r\n     * @return {Boolean} True if the key was found before deletion, false if not\r\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(keyOrIndex) {\n      var result = false;\n      var key = typeof keyOrIndex === 'number' ? this.key(keyOrIndex) : keyOrIndex;\n      var data = localStorage;\n\n      if (data === null) {\n        return 'KEY_NOT_EXISTS';\n      }\n\n      if (key in localStorage) {\n        result = true;\n        localStorage.removeItem(key);\n      }\n\n      return result;\n    }\n    /**\r\n     * \r\n     * @param {*} keyOrIndex \r\n     * @param {*} key \r\n     */\n\n  }, {\n    key: \"removeByIdInArray\",\n    value: function removeByIdInArray(keyOrIndex, key) {\n      var data = localStorage.getItem(key);\n\n      if (data === null) {\n        return 'KEY_NOT_EXISTS';\n      }\n\n      var storageProducts = JSON.parse(localStorage.getItem(key));\n      var products = storageProducts.filter(function (product) {\n        return product.productId !== keyOrIndex;\n      });\n      localStorage.setItem(key, _JSON$stringify(products));\n      return products;\n    }\n    /**\r\n     * @method clear\r\n     * @return {Number} The total of items removed\r\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var len = this._ls.length;\n\n      this._ls.clear();\n\n      return len;\n    }\n  }]);\n\n  return LocalStorageHandler;\n}();\n\n_defineProperty(LocalStorageHandler, \"_ls\", null);\n\n_defineProperty(LocalStorageHandler, \"_key\", null);\n\nexport { LocalStorageHandler as default };","map":{"version":3,"sources":["D:\\node\\delivery\\components\\LocalStorageHandler.js"],"names":["LocalStorageHandler","key","JSON","parse","_ls","getItem","e","val","setItem","get","index","i","data","length","_key","localStorage","keyOrIndex","result","removeItem","storageProducts","products","filter","product","productId","len","clear"],"mappings":";;;;;;AAAA;;;IAGqBA,mB;;;AAKpB,iCAAc;AAAA;AAAE,G,CAEhB;;AACA;;;;;;;;;wBAKWC,G,EAAK;AACf,UAAI;AACH,eAAOC,IAAI,CAACC,KAAL,CAAW,KAAKC,GAAL,CAASC,OAAT,CAAiBJ,GAAjB,CAAX,CAAP;AACA,OAFD,CAEE,OAAOK,CAAP,EAAU;AACX,eAAO,KAAKF,GAAL,CAASC,OAAT,CAAiBJ,GAAjB,CAAP;AACA;AACD;AAED;;;;;;;;;wBAMWA,G,EAAKM,G,EAAK;AACpB,WAAKH,GAAL,CAASI,OAAT,CAAiBP,GAAjB,EAAsB,gBAAeM,GAAf,CAAtB;;AACA,aAAO,KAAKE,GAAL,CAASR,GAAT,CAAP;AACA;AAED;;;;;;;;wBAMWS,K,EAAO;AACjB,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC9B,eAAO,KAAKN,GAAL,CAASH,GAAT,CAAaS,KAAb,CAAP;AACA;AACD;AAED;;;;;;;2BAIc;AACb,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,IAAI,GAAG,EAAX;;AAEA,aAAO,KAAKR,GAAL,CAASH,GAAT,CAAaU,CAAb,CAAP,EAAwB;AACvBC,QAAAA,IAAI,CAACD,CAAD,CAAJ,GAAU,CAAC,KAAKP,GAAL,CAASH,GAAT,CAAaU,CAAb,CAAD,EAAkB,KAAKF,GAAL,CAAS,KAAKL,GAAL,CAASH,GAAT,CAAaU,CAAb,CAAT,CAAlB,CAAV;AACAA,QAAAA,CAAC;AACD;;AAED,aAAOC,IAAI,CAACC,MAAL,GAAcD,IAAd,GAAqB,IAA5B;AACA;;;iCAEmBX,G,EAAK;AACxB,UAAI;AACH,aAAKa,IAAL,GAAYb,GAAZ;AACA,YAAIW,IAAI,GAAGG,YAAY,CAACV,OAAb,CAAqBJ,GAArB,CAAX;;AAEA,YAAIW,IAAI,KAAK,IAAb,EAAmB;AAClB,iBAAO,CAAP;AACA;;AACD,eAAOV,IAAI,CAACC,KAAL,CAAWS,IAAX,CAAP;AACA,OARD,CAQE,OAAON,CAAP,EAAU;AACX,eAAOA,CAAP;AACA;AACD;;;0BAEYL,G,EAAK;AACjB,UAAI;AACH,YAAIW,IAAI,GAAGG,YAAY,CAACV,OAAb,CAAqBJ,GAArB,CAAX;;AAEA,YAAIW,IAAI,KAAK,IAAb,EAAmB;AAClB,iBAAO,CAAP;AACA;;AACD,eAAO,UAASV,IAAI,CAACC,KAAL,CAAWS,IAAX,EAAiBC,MAA1B,CAAP;AACA,OAPD,CAOE,OAAOP,CAAP,EAAU;AACX,eAAOA,CAAP;AACA;AACD;AAED;;;;;;;;2BAMcU,U,EAAY;AAEzB,UAAIC,MAAM,GAAG,KAAb;AAEA,UAAIhB,GAAG,GAAG,OAAOe,UAAP,KAAsB,QAAtB,GAAiC,KAAKf,GAAL,CAASe,UAAT,CAAjC,GAAwDA,UAAlE;AAEA,UAAIJ,IAAI,GAAGG,YAAX;;AAEA,UAAIH,IAAI,KAAK,IAAb,EAAmB;AAClB,eAAO,gBAAP;AACA;;AAED,UAAIX,GAAG,IAAIc,YAAX,EAAyB;AACxBE,QAAAA,MAAM,GAAG,IAAT;AACAF,QAAAA,YAAY,CAACG,UAAb,CAAwBjB,GAAxB;AACA;;AAED,aAAOgB,MAAP;AACA;AACF;;;;;;;;sCAK0BD,U,EAAYf,G,EAAK;AAEzC,UAAIW,IAAI,GAAGG,YAAY,CAACV,OAAb,CAAqBJ,GAArB,CAAX;;AAEA,UAAIW,IAAI,KAAK,IAAb,EAAmB;AAClB,eAAO,gBAAP;AACA;;AAED,UAAIO,eAAe,GAAGjB,IAAI,CAACC,KAAL,CAAWY,YAAY,CAACV,OAAb,CAAqBJ,GAArB,CAAX,CAAtB;AAEA,UAAImB,QAAQ,GAAGD,eAAe,CAACE,MAAhB,CAAuB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,SAAR,KAAsBP,UAA1B;AAAA,OAA9B,CAAf;AAEAD,MAAAA,YAAY,CAACP,OAAb,CAAqBP,GAArB,EAA0B,gBAAemB,QAAf,CAA1B;AAEA,aAAOA,QAAP;AACA;AAED;;;;;;;4BAIe;AACd,UAAII,GAAG,GAAG,KAAKpB,GAAL,CAASS,MAAnB;;AACA,WAAKT,GAAL,CAASqB,KAAT;;AACA,aAAOD,GAAP;AACA;;;;;;gBA9ImBxB,mB,SACP,I;;gBADOA,mB,UAGN,I;;SAHMA,mB","sourcesContent":["/*\r\nUma classe para trabalhar com LocalStorage\r\n*/\r\nexport default class LocalStorageHandler {\r\n\tstatic _ls = null;\r\n\r\n\tstatic _key = null;\r\n\r\n\tconstructor() {}\r\n\r\n\t//static _ls = localStorage;\r\n\t/**\r\n\t * @method get\r\n\t * @param key {String} Item key\r\n\t * @return {String|Object|Null}\r\n\t */\r\n\tstatic get(key) {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(this._ls.getItem(key));\r\n\t\t} catch (e) {\r\n\t\t\treturn this._ls.getItem(key);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method set\r\n\t * @param key {String} Item key\r\n\t * @param val {String|Object} Item value\r\n\t * @return {String|Object} The value of the item just set\r\n\t */\r\n\tstatic set(key, val) {\r\n\t\tthis._ls.setItem(key, JSON.stringify(val));\r\n\t\treturn this.get(key);\r\n\t}\r\n\r\n\t/**\r\n\t * @method key\r\n\t * @param index {Number} Item index\r\n\t * @return {String|Null} The item key if found, null if not\r\n\t */\r\n\r\n\tstatic key(index) {\r\n\t\tif (typeof index === 'number') {\r\n\t\t\treturn this._ls.key(index);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method data\r\n\t * @return {Array|Null} An array containing all items in localStorage through key{string}-value{String|Object} pairs\r\n\t */\r\n\tstatic data() {\r\n\t\tvar i = 0;\r\n\t\tvar data = [];\r\n\r\n\t\twhile (this._ls.key(i)) {\r\n\t\t\tdata[i] = [this._ls.key(i), this.get(this._ls.key(i))];\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn data.length ? data : null;\r\n\t}\r\n\r\n\tstatic getDataByKey(key) {\r\n\t\ttry {\r\n\t\t\tthis._key = key;\r\n\t\t\tlet data = localStorage.getItem(key);\r\n\r\n\t\t\tif (data === null) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn JSON.parse(data);\r\n\t\t} catch (e) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic count(key) {\r\n\t\ttry {\r\n\t\t\tlet data = localStorage.getItem(key);\r\n\r\n\t\t\tif (data === null) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn parseInt(JSON.parse(data).length);\r\n\t\t} catch (e) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method remove\r\n\t * @param keyOrIndex {String|Number} Item key or index (which will be converted to key anyway)\r\n\t * @return {Boolean} True if the key was found before deletion, false if not\r\n\t */\r\n\r\n\tstatic remove(keyOrIndex) {\r\n\t\t\r\n\t\tvar result = false;\r\n\t\t\r\n\t\tvar key = typeof keyOrIndex === 'number' ? this.key(keyOrIndex) : keyOrIndex;\r\n\t\t\r\n\t\tlet data = localStorage\r\n\r\n\t\tif (data === null) {\r\n\t\t\treturn 'KEY_NOT_EXISTS';\r\n\t\t}\r\n\r\n\t\tif (key in localStorage) {\r\n\t\t\tresult = true;\r\n\t\t\tlocalStorage.removeItem(key);\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n/**\r\n * \r\n * @param {*} keyOrIndex \r\n * @param {*} key \r\n */\r\n\tstatic removeByIdInArray(keyOrIndex, key) {\r\n\r\n\t\tlet data = localStorage.getItem(key);\r\n\r\n\t\tif (data === null) {\r\n\t\t\treturn 'KEY_NOT_EXISTS';\r\n\t\t}\r\n\r\n\t\tlet storageProducts = JSON.parse(localStorage.getItem(key));\r\n\r\n\t\tlet products = storageProducts.filter(product => product.productId !== keyOrIndex);\r\n\r\n\t\tlocalStorage.setItem(key, JSON.stringify(products));\r\n\r\n\t\treturn products;\r\n\t}\r\n\r\n\t/**\r\n\t * @method clear\r\n\t * @return {Number} The total of items removed\r\n\t */\r\n\tstatic clear() {\r\n\t\tvar len = this._ls.length;\r\n\t\tthis._ls.clear();\r\n\t\treturn len;\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}