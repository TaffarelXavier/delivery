{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\MostrarEmpresas.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ApiRest from \"./ApiRest\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport dataEmpresasJSON from \"../db/empresas.json\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: _objectSpread({}, theme.typography.button, {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      boxShadow: \"0px 0px 15px 0px rgba(10,10,10,0.1)\"\n    }),\n    cardMedia: {\n      paddingTop: \"56.25%\" // 16:9\n\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8)\n    },\n    card: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      cursor: \"pointer !important\"\n    },\n    _grid: {\n      cursor: \"pointer !important\"\n    }\n  };\n});\n/**\r\n * Mostra os Ã­cones das empresas\r\n */\n\nexport default function MostrarEmpresas() {\n  var _useState = useState({\n    hits: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      empresas = _useState2[0],\n      setEmpresas = _useState2[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ApiRest.get(\"/empresas\");\n\n              case 2:\n                result = _context.sent;\n                setEmpresas(result.data); //setEmpresas(dataEmpresasJSON);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n\n  function mouseOverStyle(ev) {\n    ev.preventDefault();\n    ev.target.classList.add(\"hoverUp\");\n  }\n\n  function mouseOutStyle(ev, id) {\n    ev.preventDefault();\n    ev.target.classList.remove(\"hoverDown\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, _Object$values(empresas).map(function (empresa, _key) {\n    return React.createElement(Grid, {\n      item: true,\n      key: _key,\n      title: \"Clique para entrar em \" + empresa.nome_fantasia,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      className: classes._grid,\n      onClick: function onClick() {\n        window.location.href = empresa.url.toLowerCase();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      onMouseOut: function onMouseOut(ev) {\n        return mouseOutStyle(ev, empresa.id);\n      },\n      onMouseOver: function onMouseOver(ev) {\n        return mouseOverStyle(ev, empresa.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.cardMedia,\n      image: empresa.logomarca,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.cardContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, empresa.nome_fantasia), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", empresa.telefone), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, empresa.descricao)), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      dataobj: empresa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"IR PARA A LOJA\"))));\n  })));\n}","map":{"version":3,"sources":["D:\\node\\delivery\\components\\MostrarEmpresas.js"],"names":["React","useState","useEffect","Fragment","Button","Card","CardActions","CardContent","CardMedia","Grid","Typography","ApiRest","makeStyles","dataEmpresasJSON","useStyles","theme","root","typography","button","backgroundColor","palette","background","paper","padding","spacing","textAlign","boxShadow","cardMedia","paddingTop","cardGrid","paddingBottom","card","height","display","flexDirection","cursor","_grid","MostrarEmpresas","hits","empresas","setEmpresas","classes","fetchData","get","result","data","mouseOverStyle","ev","preventDefault","target","classList","add","mouseOutStyle","id","remove","map","empresa","_key","nome_fantasia","window","location","href","url","toLowerCase","logomarca","cardContent","telefone","descricao"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ApiRest from \"./ApiRest\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport dataEmpresasJSON from \"../db/empresas.json\" \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    boxShadow: \"0px 0px 15px 0px rgba(10,10,10,0.1)\"\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8)\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    cursor: \"pointer !important\"\r\n  },\r\n  _grid: {\r\n    cursor: \"pointer !important\"\r\n  },\r\n}));\r\n\r\n/**\r\n * Mostra os Ã­cones das empresas\r\n */\r\nexport default function MostrarEmpresas() {\r\n  const [empresas, setEmpresas] = useState({ hits: [] });\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await ApiRest.get(\"/empresas\");\r\n      setEmpresas(result.data);\r\n      //setEmpresas(dataEmpresasJSON);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  function mouseOverStyle(ev) {\r\n    ev.preventDefault();\r\n    ev.target.classList.add(\"hoverUp\");\r\n  }\r\n\r\n  function mouseOutStyle(ev, id) {\r\n    ev.preventDefault();\r\n    ev.target.classList.remove(\"hoverDown\");\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* {empresas.length === undefined && (\r\n\t<SpinnerDelivery label=\" Carregando empresas, aguarde, por gentileza... \" />\r\n      )} */}\r\n      <Grid container spacing={2}>\r\n        {Object.values(empresas).map((empresa, _key) => (\r\n          <Grid\r\n            item\r\n            key={_key}\r\n            title={\"Clique para entrar em \" + empresa.nome_fantasia}\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            className={classes._grid}\r\n            onClick={() => {\r\n              window.location.href = empresa.url.toLowerCase();\r\n            }}\r\n          >\r\n            <Card\r\n              className={classes.card}\r\n              onMouseOut={ev => mouseOutStyle(ev, empresa.id)}\r\n              onMouseOver={ev => mouseOverStyle(ev, empresa.id)}\r\n            >\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image={empresa.logomarca}\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {empresa.nome_fantasia}\r\n                </Typography>\r\n                <div> {empresa.telefone}</div>\r\n                <Typography>{empresa.descricao}</Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\" dataobj={empresa}>\r\n                  IR PARA A LOJA\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}