{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\Produtos.js\";\nimport React, { useState, useEffect } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    input: {\n      marginLeft: 8,\n      flex: 1,\n      borderRadius: 15,\n      padding: 15\n    },\n    content: {\n      flex: '1 0 auto'\n    },\n    listaProdutos: {\n      boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12);',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      border: '0px solid red',\n      flexDirection: 'row',\n      height: 160,\n      marginTop: 10,\n      backgroundColor: 'rgba(245,245,245,0.8)'\n    },\n    itemAvatar: {\n      width: '20%',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      border: '0px solid lime',\n      padding: 4\n    },\n    itemAvatarImg: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      border: '0px solid lime'\n    },\n    itemContent: {\n      width: '60%',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignContent: 'flex-start',\n      alignItems: 'flex-start',\n      border: '0px solid lime',\n      padding: 10\n    },\n    itemAcoes: {\n      width: '20%',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      border: '0px solid lime',\n      padding: 10,\n      textAlign: 'center'\n    },\n    inputQuantidade: {\n      border: 0,\n      outline: 0,\n      textAlign: 'center',\n      width: 40\n    }\n  };\n});\n/**\r\n * Component: Produtos\r\n */\n\nexport default function Produtos(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      quantidade = _useState2[0],\n      setQuantidade = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valorTotal = _useState4[0],\n      setValorTotal = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      observacao = _useState6[0],\n      setObservacao = _useState6[1];\n\n  var matches = useMediaQuery('(min-width:600px)');\n\n  function addProduct() {\n    var products = [];\n\n    if (localStorage.getItem('products')) {\n      products = JSON.parse(localStorage.getItem('products'));\n    } //Desestrutura��o Javascript\n\n\n    var id = props.id,\n        nome = props.nome,\n        imagem = props.imagem,\n        precoUnitario = props.precoUnitario,\n        descricao = props.descricao; //Pega o index\n\n    var objIndex = products.findIndex(function (pedido) {\n      return pedido.productId === id;\n    }); //Caso n�o exista\n\n    if (objIndex === -1) {\n      products.push({\n        productId: id,\n        nome: nome,\n        imagem: imagem,\n        quantidade: quantidade + 1,\n        observacao: observacao,\n        preco: precoUnitario,\n        descricao: descricao\n      });\n      localStorage.setItem('products', _JSON$stringify(products));\n    } else {\n      products[objIndex].productId = id;\n      products[objIndex].quantidade = quantidade + 1;\n      products[objIndex].observacao = observacao;\n      products[objIndex].nome = nome;\n      products[objIndex].imagem = imagem;\n      products[objIndex].preco = precoUnitario;\n      products[objIndex].descricao = descricao;\n      localStorage.setItem('products', _JSON$stringify(products));\n    }\n  }\n\n  function add() {\n    var quant = _parseInt(quantidade) + 1;\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal((props.precoUnitario * quant).toFixed(2));\n  }\n\n  function subtract() {\n    var quant = _parseInt(quantidade) - 1;\n    setQuantidade(quant);\n    addProduct(); //props.handleTotal(-props.precoUnitario);\n\n    setValorTotal(props.precoUnitario * quant);\n  }\n\n  function onChangeQuantidade(ev) {\n    var quant = _parseInt(ev.target.value);\n\n    setQuantidade(quant); //props.handleTotal(props.precoUnitario);\n\n    addProduct();\n    setValorTotal((props.precoUnitario * _parseInt(quant)).toFixed(2));\n  }\n\n  function alterarTextoTextArea(ev) {\n    setObservacao(ev.target.value);\n  }\n\n  useEffect(function () {\n    if (quantidade <= 0 || isNaN(_parseInt(quantidade))) {\n      setValorTotal(0);\n      setQuantidade(0);\n    }\n  }, [quantidade]);\n  var classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    id: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.demo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.listaProdutos,\n    title: 'Clique para entrar em ' + props.nome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.itemAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, props.imagem ? React.createElement(\"img\", {\n    className: classes.itemAvatarImg,\n    alt: \"\",\n    src: props.imagem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"b\")), React.createElement(\"div\", {\n    className: classes.itemContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, props.nome)), React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    title: props.descricao,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, props.descricao))), React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Kg\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), observacao.length === 0 && React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Observa\\xE7\\xE3o:\"), React.createElement(Input, {\n    id: \"my-input\",\n    onChange: function onChange(ev) {\n      alterarTextoTextArea(ev);\n    },\n    value: observacao,\n    \"aria-describedby\": \"my-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: classes.itemAcoes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"A partir de  \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }), \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"R$ \", props.precoUnitario.toFixed(2))), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Quantidade:\"), React.createElement(ButtonGroup, {\n    disableFocusRipple: true,\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    \"aria-label\": \"Split button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: subtract,\n    disabled: quantidade < 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"input\", {\n    type: \"number\",\n    onChange: function onChange(ev) {\n      return onChangeQuantidade(ev);\n    },\n    value: quantidade,\n    className: classes.inputQuantidade,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-haspopup\": \"true\",\n    value: \"+\",\n    onClick: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"+\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.chip,\n    color: \"primary\",\n    label: \"SubTotal \".concat('\\n\\n', \"R$ \", valorTotal),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })))))));\n}","map":null,"metadata":{},"sourceType":"module"}