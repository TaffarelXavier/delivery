{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\node\\\\delivery\\\\components\\\\Produtos\\\\index.js\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@material-ui/core/Button'; //values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\n\nvar useStyles = makeStyles(function (theme) {\n  var _imageBox, _bigAvatar;\n\n  return {\n    root: {\n      border: \"0px solid #ccc\",\n      marginBottom: 4,\n      boxShadow: theme.shadows[3],\n      backgroundColor: \"rgba(245,245,245,0.8)\"\n    },\n    imageBox: (_imageBox = {\n      width: \"100%\",\n      height: 140,\n      flex: 1\n    }, _defineProperty(_imageBox, theme.breakpoints.up(\"xs\"), {\n      border: \"0px solid green\"\n    }), _defineProperty(_imageBox, theme.breakpoints.up(\"sm\"), {\n      border: \"0px solid red\"\n    }), _defineProperty(_imageBox, theme.breakpoints.up(\"md\"), {\n      border: \"0px solid lime\"\n    }), _defineProperty(_imageBox, theme.breakpoints.up(\"lg\"), {\n      border: \"0px solid gold\"\n    }), _imageBox),\n    bigAvatar: (_bigAvatar = {\n      height: 100,\n      borderRadius: 5\n    }, _defineProperty(_bigAvatar, theme.breakpoints.up(\"xs\"), {\n      border: \"1px solid green\",\n      margin: 0,\n      width: 80\n    }), _defineProperty(_bigAvatar, theme.breakpoints.up(\"sm\"), {\n      margin: 10,\n      width: 100\n    }), _defineProperty(_bigAvatar, theme.breakpoints.up(\"md\"), {\n      margin: 10,\n      width: 100\n    }), _defineProperty(_bigAvatar, theme.breakpoints.up(\"lg\"), {\n      margin: 10,\n      width: 100\n    }), _bigAvatar),\n    quantidade: {\n      textAlign: \"right\",\n      width: 30,\n      paddingTop: 5,\n      paddingBottom: 5,\n      display: \"inline\",\n      border: \"0\",\n      borderBottom: \"0px solid #ccc\"\n    },\n    cardAvatar: {\n      border: \"1px solid red\"\n    },\n    cardContent: {\n      border: \"1px solid lime\"\n    },\n    cardActions: {\n      border: \"1px solid blue\"\n    },\n    valorUnitario: _defineProperty({\n      border: \"0px solid red\",\n      paddingRight: 12\n    }, theme.breakpoints.up(\"xs\"), {\n      fontWeight: \"bold\"\n    }),\n    subtotal: {\n      border: \"0px solid red\",\n      paddingRight: 12,\n      fontSize: \"12px\"\n    },\n    mdlCard: {\n      flexDirection: \"column\",\n      fontSize: \"16px\",\n      fontWeight: 400,\n      overflow: \"hidden\",\n      zIndex: 1,\n      position: \"relative\",\n      background: \"#fff\",\n      borderRadius: \"2px\",\n      boxSizing: \"border-box\",\n      border: \"0px solid red\"\n    },\n    cardItemMenu: {\n      width: \"96%\",\n      margin: \"10px auto\",\n      minHeight: \"10px\"\n    },\n    nomeItemMenu: {\n      fontFamily: \"Lato\",\n      color: \"#444\",\n      fontSize: \"18px\",\n      margin: \"0\",\n      padding: \"0\",\n      marginTop: \"10px\",\n      verticalAlign: \"baseline\",\n      textTransform: \"capitalize\",\n      fontWeight: \"bold\"\n    },\n    info_item: {\n      \"float\": \"left\"\n    },\n    descItemMenu: {\n      fontFamily: \"Lato\",\n      color: \"#444\",\n      fontSize: \"12px\",\n      margin: 0,\n      padding: 0,\n      marginTop: \"4px\",\n      verticalAlign: \"baseline\",\n      lineHeight: \"14px\",\n      textTransform: \"capitalize\"\n    },\n    img_prod: {\n      width: \"80px\",\n      \"float\": \"left\",\n      margin: \"10px\",\n      borderRadius: \"5px\",\n      maxWidth: \"100%\",\n      verticalAlign: 'middle'\n    },\n    mdlCard__actions: {\n      fontSize: '16px',\n      lineHeight: 'normal',\n      width: '100%',\n      backgroundColor: 'transparent',\n      padding: '8px',\n      boxSizing: 'border-box',\n      borderTop: '1px solid rgba(0,0,0,.1)'\n    }\n  };\n});\n/**\r\n * Component: Produtos\r\n */\n\nexport default function Produtos(props) {\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      quantidade = _useState2[0],\n      setQuantidade = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valorTotal = _useState4[0],\n      setValorTotal = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      observacao = _useState6[0],\n      setObservacao = _useState6[1];\n\n  function addProduct() {\n    var products = [];\n\n    if (localStorage.getItem(\"products\")) {\n      products = JSON.parse(localStorage.getItem(\"products\"));\n    } //Desestruturação Javascript\n\n\n    var id = props.id,\n        nome = props.nome,\n        imagem = props.imagem,\n        precoUnitario = props.precoUnitario,\n        descricao = props.descricao; //Pega o index\n\n    var objIndex = products.findIndex(function (pedido) {\n      return pedido.productId === id;\n    }); //Caso não exista\n\n    if (objIndex === -1) {\n      products.push({\n        productId: id,\n        nome: nome,\n        imagem: imagem,\n        quantidade: quantidade + 1,\n        observacao: observacao,\n        preco: precoUnitario,\n        descricao: descricao\n      });\n      localStorage.setItem(\"products\", _JSON$stringify(products));\n    } else {\n      products[objIndex].productId = id;\n      products[objIndex].quantidade = quantidade + 1;\n      products[objIndex].observacao = observacao;\n      products[objIndex].nome = nome;\n      products[objIndex].imagem = imagem;\n      products[objIndex].preco = precoUnitario;\n      products[objIndex].descricao = descricao;\n      localStorage.setItem(\"products\", _JSON$stringify(products));\n    }\n  }\n\n  function add() {\n    var quant = _parseInt(quantidade) + 1;\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal((props.precoUnitario * quant).toFixed(2));\n  }\n\n  function subtract() {\n    var quant = _parseInt(quantidade) - 1;\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal(props.precoUnitario * quant);\n  }\n\n  function onChangeQuantidade(ev) {\n    var quant = _parseInt(ev.target.value);\n\n    setQuantidade(quant);\n    addProduct();\n    setValorTotal((props.precoUnitario * _parseInt(quant)).toFixed(2));\n  }\n\n  function alterarTextoTextArea(ev) {\n    setObservacao(ev.target.value);\n  }\n\n  useEffect(function () {\n    if (quantidade <= 0 || isNaN(_parseInt(quantidade))) {\n      setValorTotal(0);\n      setQuantidade(0);\n    } //props.callbackParent(quantidade);\n\n  }, [quantidade]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classes.cardItemMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.mdlCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.info_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: props.imagem,\n    className: classes.img_prod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: classes.nomeItemMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"X Bacon\"), React.createElement(\"p\", {\n    className: classes.descItemMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"P\\xE3o, Hamb\\xFArguer 56g, Bacon, Ovo, Queijo Mussarela, Alface Americana, Tomate\")), React.createElement(Grid, {\n    container: true,\n    className: classes.mdlCard__actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"R$ 16,00\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"R$ 16,00\"))))));\n  {\n    /*\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"row\"\r\n      alignItems=\"stretch\"\r\n      alignContent=\"flex-start\"\r\n      xs={12}\r\n      sm={12}\r\n      md={12}\r\n      lg={12}\r\n      className={classes.root}\r\n      id={props.id}\r\n      title={\"Clique para entrar em \" + props.nome}\r\n    >\r\n      <Grid xs={3} sm={3} md={3} lg={2} item>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.imageBox}\r\n        >\r\n          <Avatar\r\n            alt=\"Remy Sharp\"\r\n            src={props.imagem}\r\n            className={classes.bigAvatar}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid xs={5} sm={5} md={6} lg={7} item className={classes.cardContent}>\r\n        <Grid item>\r\n          <Typography>\r\n            <b>{props.nome}</b>\r\n          </Typography>\r\n          <sub>\r\n            <strong>{props.medida}</strong>\r\n          </sub>\r\n          <Typography>{props.descricao}</Typography>\r\n        </Grid>\r\n        {observacao.length === 0 && (\r\n          <>\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </>\r\n        )}\r\n        <Grid container wrap=\"nowrap\">\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"my-input\">Observação:</InputLabel>\r\n            <Input\r\n              onChange={ev => {\r\n                alterarTextoTextArea(ev);\r\n              }}\r\n              value={observacao}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        xs={4}\r\n        sm={4}\r\n        md={3}\r\n        lg={3}\r\n        item\r\n        container\r\n        alignItems=\"baseline\"\r\n        justify=\"flex-end\"\r\n        className={classes.cardActions}\r\n      >\r\n        <Grid item>\r\n          <Typography className={classes.valorUnitario}>\r\n            <b>\r\n              Preço: R${\" \"}\r\n              {props.precoUnitario != undefined\r\n                ? props.precoUnitario.toFixed(2)\r\n                : null}\r\n            </b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={subtract}\r\n            disabled={quantidade < 1}\r\n            color=\"primary\"\r\n            aria-label=\"add to shopping cart\"\r\n          >\r\n            <RemoveShoppingCartIcon />\r\n          </IconButton>\r\n          <input\r\n            type=\"number\"\r\n            onChange={ev => onChangeQuantidade(ev)}\r\n            value={quantidade}\r\n            className={classes.quantidade}\r\n          />\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"add to shopping cart\"\r\n            onClick={add}\r\n          >\r\n            <AddShoppingCartIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <br />\r\n        <Grid item>\r\n          <br />\r\n          <Typography className={classes.subtotal}>\r\n            {quantidade > 0 && <> Sub Total: R$ {valorTotal}</>}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    */\n  }\n}","map":{"version":3,"sources":["D:\\node\\delivery\\components\\Produtos\\index.js"],"names":["makeStyles","Avatar","Grid","React","useEffect","useState","Button","useStyles","theme","root","border","marginBottom","boxShadow","shadows","backgroundColor","imageBox","width","height","flex","breakpoints","up","bigAvatar","borderRadius","margin","quantidade","textAlign","paddingTop","paddingBottom","display","borderBottom","cardAvatar","cardContent","cardActions","valorUnitario","paddingRight","fontWeight","subtotal","fontSize","mdlCard","flexDirection","overflow","zIndex","position","background","boxSizing","cardItemMenu","minHeight","nomeItemMenu","fontFamily","color","padding","marginTop","verticalAlign","textTransform","info_item","descItemMenu","lineHeight","img_prod","maxWidth","mdlCard__actions","borderTop","Produtos","props","classes","setQuantidade","valorTotal","setValorTotal","observacao","setObservacao","addProduct","products","localStorage","getItem","JSON","parse","id","nome","imagem","precoUnitario","descricao","objIndex","findIndex","pedido","productId","push","preco","setItem","add","quant","toFixed","subtract","onChangeQuantidade","ev","target","value","alterarTextoTextArea","isNaN"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    border: \"0px solid #ccc\",\r\n    marginBottom: 4,\r\n    boxShadow: theme.shadows[3],\r\n    backgroundColor: \"rgba(245,245,245,0.8)\"\r\n  },\r\n  imageBox: {\r\n    width: \"100%\",\r\n    height: 140,\r\n    flex: 1,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      border: \"0px solid green\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      border: \"0px solid red\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      border: \"0px solid lime\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      border: \"0px solid gold\"\r\n    }\r\n  },\r\n  bigAvatar: {\r\n    height: 100,\r\n    borderRadius: 5,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      border: \"1px solid green\",\r\n      margin: 0,\r\n      width: 80\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: 10,\r\n      width: 100\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: 10,\r\n      width: 100\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      margin: 10,\r\n      width: 100\r\n    }\r\n  },\r\n  quantidade: {\r\n    textAlign: \"right\",\r\n    width: 30,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    display: \"inline\",\r\n    border: \"0\",\r\n    borderBottom: \"0px solid #ccc\"\r\n  },\r\n  cardAvatar: {\r\n    border: \"1px solid red\"\r\n  },\r\n  cardContent: {\r\n    border: \"1px solid lime\"\r\n  },\r\n  cardActions: {\r\n    border: \"1px solid blue\"\r\n  },\r\n  valorUnitario: {\r\n    border: \"0px solid red\",\r\n    paddingRight: 12,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      fontWeight: \"bold\"\r\n    }\r\n  },\r\n  subtotal: {\r\n    border: \"0px solid red\",\r\n    paddingRight: 12,\r\n    fontSize: \"12px\"\r\n  },\r\n  mdlCard: {\r\n    flexDirection: \"column\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    overflow: \"hidden\",\r\n    zIndex: 1,\r\n    position: \"relative\",\r\n    background: \"#fff\",\r\n    borderRadius: \"2px\",\r\n    boxSizing: \"border-box\",\r\n    border: \"0px solid red\"\r\n  },\r\n  cardItemMenu: {\r\n    width: \"96%\",\r\n    margin: \"10px auto\",\r\n    minHeight: \"10px\"\r\n  },\r\n  nomeItemMenu: {\r\n    fontFamily: \"Lato\",\r\n    color: \"#444\",\r\n    fontSize: \"18px\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    marginTop: \"10px\",\r\n    verticalAlign: \"baseline\",\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  info_item: {\r\n    float: \"left\"\r\n  },\r\n  descItemMenu: {\r\n    fontFamily: \"Lato\",\r\n    color: \"#444\",\r\n    fontSize: \"12px\",\r\n    margin: 0,\r\n    padding: 0,\r\n    marginTop: \"4px\",\r\n    verticalAlign: \"baseline\",\r\n    lineHeight: \"14px\",\r\n    textTransform: \"capitalize\"\r\n  },\r\n  img_prod: {\r\n    width: \"80px\",\r\n    float: \"left\",\r\n    margin: \"10px\",\r\n    borderRadius: \"5px\",\r\n    maxWidth: \"100%\",\r\n    verticalAlign: 'middle',\r\n  },\r\n  mdlCard__actions:{\r\n    fontSize: '16px',\r\n    lineHeight: 'normal',\r\n    width: '100%',\r\n    backgroundColor: 'transparent',\r\n    padding: '8px',\r\n    boxSizing: 'border-box',\r\n    borderTop: '1px solid rgba(0,0,0,.1)',\r\n  }\r\n}));\r\n\r\n/**\r\n * Component: Produtos\r\n */\r\nexport default function Produtos(props) {\r\n  const classes = useStyles();\r\n  const [quantidade, setQuantidade] = useState(0);\r\n  const [valorTotal, setValorTotal] = useState(0);\r\n  const [observacao, setObservacao] = useState(\"\");\r\n\r\n  function addProduct() {\r\n    let products = [];\r\n\r\n    if (localStorage.getItem(\"products\")) {\r\n      products = JSON.parse(localStorage.getItem(\"products\"));\r\n    }\r\n\r\n    //Desestruturação Javascript\r\n    const { id, nome, imagem, precoUnitario, descricao } = props;\r\n\r\n    //Pega o index\r\n    let objIndex = products.findIndex(pedido => pedido.productId === id);\r\n\r\n    //Caso não exista\r\n    if (objIndex === -1) {\r\n      products.push({\r\n        productId: id,\r\n        nome: nome,\r\n        imagem: imagem,\r\n        quantidade: quantidade + 1,\r\n        observacao: observacao,\r\n        preco: precoUnitario,\r\n        descricao: descricao\r\n      });\r\n\r\n      localStorage.setItem(\"products\", JSON.stringify(products));\r\n    } else {\r\n      products[objIndex].productId = id;\r\n      products[objIndex].quantidade = quantidade + 1;\r\n      products[objIndex].observacao = observacao;\r\n      products[objIndex].nome = nome;\r\n      products[objIndex].imagem = imagem;\r\n      products[objIndex].preco = precoUnitario;\r\n      products[objIndex].descricao = descricao;\r\n      localStorage.setItem(\"products\", JSON.stringify(products));\r\n    }\r\n  }\r\n\r\n  function add() {\r\n    let quant = parseInt(quantidade) + 1;\r\n    setQuantidade(quant);\r\n    addProduct();\r\n    setValorTotal((props.precoUnitario * quant).toFixed(2));\r\n  }\r\n\r\n  function subtract() {\r\n    let quant = parseInt(quantidade) - 1;\r\n    setQuantidade(quant);\r\n    addProduct();\r\n    setValorTotal(props.precoUnitario * quant);\r\n  }\r\n\r\n  function onChangeQuantidade(ev) {\r\n    let quant = parseInt(ev.target.value);\r\n    setQuantidade(quant);\r\n    addProduct();\r\n    setValorTotal((props.precoUnitario * parseInt(quant)).toFixed(2));\r\n  }\r\n\r\n  function alterarTextoTextArea(ev) {\r\n    setObservacao(ev.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (quantidade <= 0 || isNaN(parseInt(quantidade))) {\r\n      setValorTotal(0);\r\n      setQuantidade(0);\r\n    }\r\n    //props.callbackParent(quantidade);\r\n  }, [quantidade]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.cardItemMenu}>\r\n        <div className={classes.mdlCard}>\r\n          <div className={classes.info_item}>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              src={props.imagem}\r\n              className={classes.img_prod}\r\n            />\r\n            <p className={classes.nomeItemMenu}>X Bacon</p>\r\n            <p className={classes.descItemMenu}>\r\n              Pão, Hambúrguer 56g, Bacon, Ovo, Queijo Mussarela, Alface\r\n              Americana, Tomate\r\n            </p>\r\n          </div>\r\n          <Grid container className={classes.mdlCard__actions}>\r\n            <Grid item xs><Button>R$ 16,00</Button></Grid>\r\n            <Grid item xs><Button>R$ 16,00</Button></Grid>\r\n            </Grid>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  {\r\n    /*\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"row\"\r\n      alignItems=\"stretch\"\r\n      alignContent=\"flex-start\"\r\n      xs={12}\r\n      sm={12}\r\n      md={12}\r\n      lg={12}\r\n      className={classes.root}\r\n      id={props.id}\r\n      title={\"Clique para entrar em \" + props.nome}\r\n    >\r\n      <Grid xs={3} sm={3} md={3} lg={2} item>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.imageBox}\r\n        >\r\n          <Avatar\r\n            alt=\"Remy Sharp\"\r\n            src={props.imagem}\r\n            className={classes.bigAvatar}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid xs={5} sm={5} md={6} lg={7} item className={classes.cardContent}>\r\n        <Grid item>\r\n          <Typography>\r\n            <b>{props.nome}</b>\r\n          </Typography>\r\n          <sub>\r\n            <strong>{props.medida}</strong>\r\n          </sub>\r\n          <Typography>{props.descricao}</Typography>\r\n        </Grid>\r\n        {observacao.length === 0 && (\r\n          <>\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </>\r\n        )}\r\n        <Grid container wrap=\"nowrap\">\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"my-input\">Observação:</InputLabel>\r\n            <Input\r\n              onChange={ev => {\r\n                alterarTextoTextArea(ev);\r\n              }}\r\n              value={observacao}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        xs={4}\r\n        sm={4}\r\n        md={3}\r\n        lg={3}\r\n        item\r\n        container\r\n        alignItems=\"baseline\"\r\n        justify=\"flex-end\"\r\n        className={classes.cardActions}\r\n      >\r\n        <Grid item>\r\n          <Typography className={classes.valorUnitario}>\r\n            <b>\r\n              Preço: R${\" \"}\r\n              {props.precoUnitario != undefined\r\n                ? props.precoUnitario.toFixed(2)\r\n                : null}\r\n            </b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={subtract}\r\n            disabled={quantidade < 1}\r\n            color=\"primary\"\r\n            aria-label=\"add to shopping cart\"\r\n          >\r\n            <RemoveShoppingCartIcon />\r\n          </IconButton>\r\n          <input\r\n            type=\"number\"\r\n            onChange={ev => onChangeQuantidade(ev)}\r\n            value={quantidade}\r\n            className={classes.quantidade}\r\n          />\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"add to shopping cart\"\r\n            onClick={add}\r\n          >\r\n            <AddShoppingCartIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <br />\r\n        <Grid item>\r\n          <br />\r\n          <Typography className={classes.subtotal}>\r\n            {quantidade > 0 && <> Sub Total: R$ {valorTotal}</>}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n*/\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}