{"version":3,"file":"0.js","sources":["webpack:///./components/DialogFormConfirm/index.js"],"sourcesContent":["import Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport LocalStorageHandler from \"../LocalStorageHandler\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction SignIn() {\r\n  \r\n  const inputRef = useRef();\r\n\r\n  const [isEditing, setEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isEditing) {\r\n      inputRef.current.focus();\r\n      setEditing(!0);\r\n    }\r\n  }, [isEditing]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            type=\"text\"\r\n            id=\"email\"\r\n            label=\"Email ou Telefone\"\r\n            name=\"email\"\r\n            autoFocus\r\n            inputRef={inputRef}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"endereco\"\r\n            label=\"Endereco\"\r\n            type=\"text\"\r\n            id=\"endereco\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default function SimpleDialog(props) {\r\n  const { onClose, open } = props;\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const classes = useStyles();\r\n\r\n  function handleClose() {\r\n    onClose(true);\r\n  }\r\n\r\n  function onCloncluirPedido() {\r\n    alert(\r\n      JSON.stringify(LocalStorageHandler.getDataByKey(\"products\")) +\r\n        \"\\n\\n\" +\r\n        LocalStorageHandler.remove(\"products\")\r\n    );\r\n    onClose(!0);\r\n  }\r\n\r\n  return (\r\n    <Dialog fullScreen={fullScreen} open={open} onClose={handleClose}>\r\n      <DialogTitle id=\"responsive-dialog-title\" className={classes.root}>\r\n        <Box justifyContent=\"center\">Concluir Pedido</Box>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Typography>\r\n          Verificaremos que você não está logado ou que não possui uma conta,\r\n          então, para proseguir, digite seu número de telefone e endereço, e o\r\n          seu pedido será feito.\r\n        </Typography>\r\n        <SignIn />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"default\" variant=\"contained\">\r\n          Fechar\r\n        </Button>\r\n        <Button\r\n          onClick={onCloncluirPedido}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          autoFocus\r\n        >\r\n          Confirmar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAFA;AAlBA;AAAA;AACA;AAuBA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}